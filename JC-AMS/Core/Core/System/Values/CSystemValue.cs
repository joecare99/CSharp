// ***********************************************************************
// Assembly         : Core
// Author           : Mir
// Created          : 10-11-2022
//
// Last Modified By : Mir
// Last Modified On : 10-14-2022
// ***********************************************************************
// <copyright file="CSystemValue.cs" company="HP Inc.">
//     Copyright (c) HP Inc.. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using JCAMS.Core.DataOperations;
using System.Collections.Generic;
using System.Linq;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;

/// <summary>
/// The Values namespace.
/// </summary>
/// <autogeneratedoc />
namespace JCAMS.Core.System.Values
{
    /// <summary>
    /// Class CSystemValue.
    /// Implements the <see cref="CPropNotificationClass" />
    /// Implements the <see cref="JCAMS.Core.System.IHasDescription" />
    /// Implements the <see cref="JCAMS.Core.System.IHasParent" />
    /// Implements the <see cref="JCAMS.Core.System.IHasID" />
    /// Implements the <see cref="IXmlSerializable" />
    /// </summary>
    /// <seealso cref="CPropNotificationClass" />
    /// <seealso cref="JCAMS.Core.System.IHasDescription" />
    /// <seealso cref="JCAMS.Core.System.IHasParent" />
    /// <seealso cref="JCAMS.Core.System.IHasID" />
    /// <seealso cref="IXmlSerializable" />
    /// <autogeneratedoc />
    public class CSystemValue : CPropNotificationClass, IHasDescription, IHasParent, IHasID, IXmlSerializable
    {
        #region Properties
        #region private properties
        /// <summary>
        /// The identifier value
        /// </summary>
        /// <autogeneratedoc />
        private long _idValue=-1;
        /// <summary>
        /// The description
        /// </summary>
        /// <autogeneratedoc />
        private string _Description="";
        /// <summary>
        /// The value definition
        /// </summary>
        /// <autogeneratedoc />
        private CSystemValueDef? _valDef;
        /// <summary>
        /// The index
        /// </summary>
        /// <autogeneratedoc />
        private int _Index;
        /// <summary>
        /// The value
        /// </summary>
        /// <autogeneratedoc />
        private object? _Value;
        #endregion
        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        /// <value>The description.</value>
        /// <autogeneratedoc />
        public string Description { get => _Description; set => SetValue(value, ref _Description); }

        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        /// <value>The value.</value>
        /// <autogeneratedoc />
        public object? Value { get => _Value; set => SetValue(value, ref _Value); }

        /// <summary>
        /// Gets the sub station.
        /// </summary>
        /// <value>The sub station.</value>
        /// <autogeneratedoc />
        public CSubStation? SubStation { get; private set; }

        /// <summary>
        /// Gets the value definition.
        /// </summary>
        /// <value>The value definition.</value>
        /// <autogeneratedoc />
        public CSystemValueDef ValueDef => _valDef;
        /// <summary>
        /// Gets the index.
        /// </summary>
        /// <value>The index.</value>
        /// <autogeneratedoc />
        public int Index => _Index;

        /// <summary>
        /// The structure parent
        /// </summary>
        /// <autogeneratedoc />
        public CSystemValue? StructParent;
        /// <summary>
        /// The children
        /// </summary>
        /// <autogeneratedoc />
        public CSystemValue[]? Children;

        /// <summary>
        /// Gets the identifier value.
        /// </summary>
        /// <value>The identifier value.</value>
        /// <autogeneratedoc />
        public long idValue { get => _idValue; private set => SetValue(value, ref _idValue); }
        /// <summary>
        /// Gets the identifier value definition.
        /// </summary>
        /// <value>The identifier value definition.</value>
        /// <autogeneratedoc />
        public long idValueDef => ValueDef?.idValueDef ?? -1;
        /// <summary>
        /// Gets the identifier value s parent.
        /// </summary>
        /// <value>The identifier value s parent.</value>
        /// <autogeneratedoc />
        public long idValue_SParent => StructParent?.idValue ?? -1;
        /// <summary>
        /// Gets the identifier sub station.
        /// </summary>
        /// <value>The identifier sub station.</value>
        /// <autogeneratedoc />
        public long idSubStation => SubStation?.idSubStation ?? -1;

        #region interface properties
        /// <summary>
        /// Gets or sets the parent.
        /// </summary>
        /// <value>The parent.</value>
        /// <autogeneratedoc />
        object IHasParent.Parent { get => SubStation; set => SubStation = value as CSubStation ; }

        /// <summary>
        /// Gets the identifier.
        /// </summary>
        /// <value>The identifier.</value>
        /// <autogeneratedoc />
        long IHasID.ID => _idValue;
        #endregion
        #region static properties
        /// <summary>
        /// The values
        /// </summary>
        /// <autogeneratedoc />
        public static Dictionary<long, CSystemValue> Values=new Dictionary<long, CSystemValue>();
        #endregion
        #endregion
        #region Methods
        /// <summary>
        /// Initializes a new instance of the <see cref="CSystemValue"/> class.
        /// </summary>
        /// <autogeneratedoc />
        public CSystemValue()
        {
            _idValue=Values.Keys.Max()+1;
            Values[_idValue]= this;
            _Index = 0;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CSystemValue"/> class.
        /// </summary>
        /// <param name="valDef">The value definition.</param>
        /// <param name="sSt">The s st.</param>
        /// <param name="idx">The index.</param>
        /// <autogeneratedoc />
        public CSystemValue(CSystemValueDef valDef,CSubStation sSt,int idx):this()
        {
            _valDef = valDef;
            SubStation = sSt;
            _Index = idx;    
        }

        /// <summary>
        /// Diese Methode ist reserviert und sollte nicht verwendet werden.
        /// Bei der Implementierung der <see langword="IXmlSerializable" />-Schnittstelle sollte von dieser Methode <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) zurückgegeben werden. Wenn die Angabe eines benutzerdefinierten Schemas erforderlich ist, sollten Sie stattdessen das das <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> auf die Klasse anwenden.
        /// </summary>
        /// <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
        /// <autogeneratedoc />
        public XmlSchema GetSchema() => null;

        /// <summary>
        /// Generiert ein Objekt aus seiner XML-Darstellung.
        /// </summary>
        /// <param name="reader">Der <see cref="T:System.Xml.XmlReader" />-Stream, aus dem das Objekt deserialisiert wird.</param>
        /// <exception cref="System.NotImplementedException"></exception>
        /// <autogeneratedoc />
        public void ReadXml(XmlReader reader)
        {
            //Todo: 
            throw new global::System.NotImplementedException();
        }

        /// <summary>
        /// Konvertiert ein Objekt in seine XML-Darstellung.
        /// </summary>
        /// <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />-Stream, in den das Objekt serialisiert wird.</param>
        /// <autogeneratedoc />
        public void WriteXml(XmlWriter writer)
        {
            writer.WriteStartAttribute(nameof(idValue));
            writer.WriteValue(idValue);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(Description));
            writer.WriteValue(Description);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(idSubStation));
            writer.WriteValue(idSubStation);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(idValueDef));
            writer.WriteValue(idValueDef);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(Value));
            writer.WriteValue(Value);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(Index));
            writer.WriteValue(Index);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(idValue_SParent));
            writer.WriteValue(idValue_SParent);
            writer.WriteEndAttribute();

            writer.WriteStartAttribute(nameof(Children)+".Count");
            writer.WriteValue(Children.Count());
            writer.WriteEndAttribute();
        }
        #endregion
    }
}
