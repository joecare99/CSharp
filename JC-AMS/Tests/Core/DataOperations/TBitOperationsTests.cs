using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace JCAMS.Core.DataOperations.Tests
{
    [TestClass()]
    public class TBitOperationsTests
    {
        [DataTestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0,0,false)]
        [DataRow(1, 0, true)]
        [DataRow(int.MaxValue-1, 0, false)]
        [DataRow(2, 1, true)]
        [DataRow(int.MaxValue - 2, 1, false)]
        [DataRow(4, 2, true)]
        [DataRow(int.MaxValue - 4, 2, false)]
        [DataRow(8, 3, true)]
        [DataRow(int.MaxValue - 8, 3, false)]
        [DataRow(16, 4, true)]
        [DataRow(int.MaxValue - 16, 4, false)]
        [DataRow(int.MinValue, 31, true)]
        [DataRow(int.MaxValue , 31, false)]
        public void IsBitSetTest(int iVal,int iBit,bool xExp)
        {
            Assert.AreEqual(xExp,TBitOperations.IsBitSet(iVal,iBit));
        }

        [DataTestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false)]
        [DataRow(1, 0, true)]
        [DataRow(int.MaxValue - 1, 0, false)]
        [DataRow(2, 1, true)]
        [DataRow(int.MaxValue - 2, 1, false)]
        [DataRow(4, 2, true)]
        [DataRow(int.MaxValue - 4, 2, false)]
        [DataRow(int.MinValue, 31, true)]
        [DataRow(int.MaxValue, 31, false)]
        [DataRow(long.MinValue, 63, true)]
        [DataRow(long.MaxValue, 63, false)]
        public void IsBitSetTest1(long lVal, int iBit, bool xExp)
        {
            Assert.AreEqual(xExp, TBitOperations.IsBitSet(lVal, iBit));
        }

        [DataTestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0u, 0, false)]
        [DataRow(1u, 0, true)]
        [DataRow(uint.MaxValue - 1u, 0, false)]
        [DataRow(2u, 1, true)]
        [DataRow(uint.MaxValue - 2u, 1, false)]
        [DataRow(4u, 2, true)]
        [DataRow(uint.MaxValue - 4u, 2, false)]
        [DataRow(0x80000000, 31, true)]
        [DataRow((uint)int.MaxValue, 31, false)]
        [DataRow(0x8000000000000000, 63, true)]
        [DataRow((ulong)long.MaxValue, 63, false)]
        public void IsBitSetTest2(ulong lVal, int iBit, bool xExp)
        {
            Assert.AreEqual(xExp, TBitOperations.IsBitSet(lVal, iBit));
        }

        [DataTestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false)]
        [DataRow(1, 0, true)]
        [DataRow(int.MaxValue - 1, 0, false)]
        [DataRow(2, 1, true)]
        [DataRow(int.MaxValue - 2, 1, false)]
        [DataRow(4, 2, true)]
        [DataRow(int.MaxValue - 4, 2, false)]
        [DataRow(8, 3, true)]
        [DataRow(int.MaxValue - 8, 3, false)]
        [DataRow(16, 4, true)]
        [DataRow(int.MaxValue - 16, 4, false)]
        [DataRow(int.MinValue, 31, true)]
        [DataRow(int.MaxValue, 31, false)]
        public void IsBitSetTest3(int iVal, int iBit, bool xExp)
        {
            Assert.AreEqual(xExp, iVal.IsBitSet(iBit));
        }

        [DataTestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false)]
        [DataRow(1, 0, true)]
        [DataRow(int.MaxValue - 1, 0, false)]
        [DataRow(2, 1, true)]
        [DataRow(int.MaxValue - 2, 1, false)]
        [DataRow(4, 2, true)]
        [DataRow(int.MaxValue - 4, 2, false)]
        [DataRow(int.MinValue, 31, true)]
        [DataRow(int.MaxValue, 31, false)]
        [DataRow(long.MinValue, 63, true)]
        [DataRow(long.MaxValue, 63, false)]
        public void IsBitSetTest4(long lVal, int iBit, bool xExp)
        {
            Assert.AreEqual(xExp, lVal.IsBitSet(iBit));
        }

        [DataTestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0u, 0, false)]
        [DataRow(1u, 0, true)]
        [DataRow(uint.MaxValue - 1u, 0, false)]
        [DataRow(2u, 1, true)]
        [DataRow(uint.MaxValue - 2u, 1, false)]
        [DataRow(4u, 2, true)]
        [DataRow(uint.MaxValue - 4u, 2, false)]
        [DataRow(0x80000000, 31, true)]
        [DataRow((uint)int.MaxValue, 31, false)]
        [DataRow(0x8000000000000000, 63, true)]
        [DataRow((ulong)long.MaxValue, 63, false)]
        public void IsBitSetTest5(ulong lVal, int iBit, bool xExp)
        {
            Assert.AreEqual(xExp, lVal.IsBitSet(iBit));
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false,0)]
        [DataRow(0, 0, true, 1)]
        [DataRow(1, 0, true, 1)]
        [DataRow(1, 0, false, 0)]
        [DataRow(0, -1, false, 0)]
        [DataRow(int.MaxValue, 0, false, int.MaxValue - 1)]
        [DataRow(int.MaxValue, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue-1, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue-1, 0, false, int.MaxValue - 1)]
        [DataRow(0, 1, false, 0)]
        [DataRow(0, 1, true, 2)]
        [DataRow(2, 1, true, 2)]
        [DataRow(2, 1, false, 0)]
        [DataRow(int.MaxValue, 1, false, int.MaxValue - 2)]
        [DataRow(int.MaxValue, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, false, int.MaxValue - 2)]
        [DataRow(0, 2, false, 0)]
        [DataRow(0, 2, true, 4)]
        [DataRow(4, 2, true, 4)]
        [DataRow(4, 2, false, 0)]
        [DataRow(int.MaxValue, 2, false, int.MaxValue - 4)]
        [DataRow(int.MaxValue, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, false, int.MaxValue - 4)]
        [DataRow(0, 31, false, 0)]
        [DataRow(0, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, false, 0)]
        [DataRow(int.MaxValue, 31, false, int.MaxValue)]
        [DataRow(int.MaxValue, 31, true, -1)]
        [DataRow(int.MinValue, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, false, 0)]
        public void SetBitTest(int iVal, int iBit, bool xVal,int iExp)
        {
            Assert.AreEqual(iExp, TBitOperations.SetBit(iVal, iBit,xVal));
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false, 0)]
        [DataRow(0, 0, true, 1)]
        [DataRow(1, 0, true, 1)]
        [DataRow(1, 0, false, 0)]
        [DataRow(0, -1, false, 0)]
        [DataRow(int.MaxValue, 0, false, int.MaxValue - 1)]
        [DataRow(int.MaxValue, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, false, int.MaxValue - 1)]
        [DataRow(0, 1, false, 0)]
        [DataRow(0, 1, true, 2)]
        [DataRow(2, 1, true, 2)]
        [DataRow(2, 1, false, 0)]
        [DataRow(int.MaxValue, 1, false, int.MaxValue - 2)]
        [DataRow(int.MaxValue, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, false, int.MaxValue - 2)]
        [DataRow(0, 2, false, 0)]
        [DataRow(0, 2, true, 4)]
        [DataRow(4, 2, true, 4)]
        [DataRow(4, 2, false, 0)]
        [DataRow(int.MaxValue, 2, false, int.MaxValue - 4)]
        [DataRow(int.MaxValue, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, false, int.MaxValue - 4)]
        [DataRow(0, 31, false, 0)]
        [DataRow(0, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, false, 0)]
        [DataRow(int.MaxValue, 31, false, int.MaxValue)]
        [DataRow(int.MaxValue, 31, true, -1)]
        [DataRow(int.MinValue, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, false, 0)]
        public void SetBitTest1(int iVal, int iBit, bool xVal, int iExp)
        {
            TBitOperations.SetBit(ref iVal, iBit, xVal);
            Assert.AreEqual(iExp, iVal);
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false, 0)]
        [DataRow(0, 0, true, 1)]
        [DataRow(1, 0, true, 1)]
        [DataRow(1, 0, false, 0)]
        [DataRow(0, -1, false, 0)]
        [DataRow(int.MaxValue, 0, false, int.MaxValue - 1)]
        [DataRow(int.MaxValue, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, false, int.MaxValue - 1)]
        [DataRow(0, 1, false, 0)]
        [DataRow(0, 1, true, 2)]
        [DataRow(2, 1, true, 2)]
        [DataRow(2, 1, false, 0)]
        [DataRow(int.MaxValue, 1, false, int.MaxValue - 2)]
        [DataRow(int.MaxValue, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, false, int.MaxValue - 2)]
        [DataRow(0, 2, false, 0)]
        [DataRow(0, 2, true, 4)]
        [DataRow(4, 2, true, 4)]
        [DataRow(4, 2, false, 0)]
        [DataRow(int.MaxValue, 2, false, int.MaxValue - 4)]
        [DataRow(int.MaxValue, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, false, int.MaxValue - 4)]
        [DataRow(0, 31, false, 0)]
        [DataRow(0, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue+1L, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue+1L, 31, false, 0)]
        [DataRow(int.MaxValue, 31, false, int.MaxValue)]
        [DataRow(int.MaxValue, 31, true, uint.MaxValue)]
        [DataRow(int.MaxValue + 1L, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, false, 0)]
        [DataRow(0, 63, false, 0)]
        [DataRow(0, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, false, 0)]
        [DataRow(long.MaxValue, 63, false, long.MaxValue)]
        [DataRow(long.MaxValue, 63, true, -1)]
        [DataRow(long.MinValue, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, false, 0)]
        public void SetBitTest2(long lVal, int iBit, bool xVal, long lExp)
        {
            Assert.AreEqual(lExp, TBitOperations.SetBit(lVal, iBit, xVal));
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false, 0)]
        [DataRow(0, 0, true, 1)]
        [DataRow(1, 0, true, 1)]
        [DataRow(1, 0, false, 0)]
        [DataRow(0, -1, false, 0)]
        [DataRow(int.MaxValue, 0, false, int.MaxValue - 1)]
        [DataRow(int.MaxValue, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, false, int.MaxValue - 1)]
        [DataRow(0, 1, false, 0)]
        [DataRow(0, 1, true, 2)]
        [DataRow(2, 1, true, 2)]
        [DataRow(2, 1, false, 0)]
        [DataRow(int.MaxValue, 1, false, int.MaxValue - 2)]
        [DataRow(int.MaxValue, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, false, int.MaxValue - 2)]
        [DataRow(0, 2, false, 0)]
        [DataRow(0, 2, true, 4)]
        [DataRow(4, 2, true, 4)]
        [DataRow(4, 2, false, 0)]
        [DataRow(int.MaxValue, 2, false, int.MaxValue - 4)]
        [DataRow(int.MaxValue, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, false, int.MaxValue - 4)]
        [DataRow(0, 31, false, 0)]
        [DataRow(0, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, false, 0)]
        [DataRow(int.MaxValue, 31, false, int.MaxValue)]
        [DataRow(int.MaxValue, 31, true, uint.MaxValue)]
        [DataRow(int.MaxValue + 1L, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, false, 0)]
        [DataRow(0, 63, false, 0)]
        [DataRow(0, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, false, 0)]
        [DataRow(long.MaxValue, 63, false, long.MaxValue)]
        [DataRow(long.MaxValue, 63, true, -1)]
        [DataRow(long.MinValue, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, false, 0)]
        public void SetBitTest3(long lVal, int iBit, bool xVal, long lExp)
        {
            TBitOperations.SetBit(ref lVal, iBit, xVal);
            Assert.AreEqual(lExp, lVal);
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0u, 0, false, 0u)]
        [DataRow(0u, 0, true, 1u)]
        [DataRow(1u, 0, true, 1u)]
        [DataRow(1u, 0, false, 0u)]
        [DataRow(0u, -1, false, 0u)]
        [DataRow(uint.MaxValue, 0, false, uint.MaxValue - 1)]
        [DataRow(uint.MaxValue, 0, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 1, 0, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 1, 0, false, uint.MaxValue - 1)]
        [DataRow(0u, 1, false, 0u)]
        [DataRow(0u, 1, true, 2u)]
        [DataRow(2u, 1, true, 2u)]
        [DataRow(2u, 1, false, 0u)]
        [DataRow(uint.MaxValue, 1, false, uint.MaxValue - 2)]
        [DataRow(uint.MaxValue, 1, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 2, 1, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 2, 1, false, uint.MaxValue - 2)]
        [DataRow(0u, 2, false, 0u)]
        [DataRow(0u, 2, true, 4u)]
        [DataRow(4u, 2, true, 4u)]
        [DataRow(4u, 2, false, 0u)]
        [DataRow(uint.MaxValue, 2, false, uint.MaxValue - 4)]
        [DataRow(uint.MaxValue, 2, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 4, 2, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 4, 2, false, uint.MaxValue - 4)]
        [DataRow(0u, 31, false, 0u)]
        [DataRow(0u, 31, true, int.MaxValue + 1ul)]
        [DataRow(int.MaxValue + 1ul, 31, true, int.MaxValue + 1ul)]
        [DataRow(int.MaxValue + 1ul, 31, false, 0u)]
        [DataRow(uint.MaxValue, 31, false, (uint)int.MaxValue)]
        [DataRow(uint.MaxValue, 31, true, uint.MaxValue)]
        [DataRow(int.MaxValue + 1lu, 31, true, int.MaxValue + 1ul)]
        [DataRow(int.MaxValue + 1lu, 31, false, 0u)]
        [DataRow(0u, 63, false, 0u)]
        [DataRow(0u, 63, true, ulong.MaxValue/2+1)]
        [DataRow(ulong.MaxValue/2+1, 63, true, ulong.MaxValue/2+1)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, false, 0u)]
        [DataRow(ulong.MaxValue/2, 63, false, ulong.MaxValue/2)]
        [DataRow(ulong.MaxValue/2, 63, true, ulong.MaxValue)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, true, ulong.MaxValue/2+1)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, false, 0u)]
        public void SetBitTest4(ulong uVal, int iBit, bool xVal, ulong uExp)
        {
            Assert.AreEqual(uExp, TBitOperations.SetBit(uVal, iBit, xVal));
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false, 0)]
        [DataRow(0, 0, true, 1)]
        [DataRow(1, 0, true, 1)]
        [DataRow(1, 0, false, 0)]
        [DataRow(0, -1, false, 0)]
        [DataRow(int.MaxValue, 0, false, int.MaxValue - 1)]
        [DataRow(int.MaxValue, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, false, int.MaxValue - 1)]
        [DataRow(0, 1, false, 0)]
        [DataRow(0, 1, true, 2)]
        [DataRow(2, 1, true, 2)]
        [DataRow(2, 1, false, 0)]
        [DataRow(int.MaxValue, 1, false, int.MaxValue - 2)]
        [DataRow(int.MaxValue, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, false, int.MaxValue - 2)]
        [DataRow(0, 2, false, 0)]
        [DataRow(0, 2, true, 4)]
        [DataRow(4, 2, true, 4)]
        [DataRow(4, 2, false, 0)]
        [DataRow(int.MaxValue, 2, false, int.MaxValue - 4)]
        [DataRow(int.MaxValue, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, false, int.MaxValue - 4)]
        [DataRow(0, 31, false, 0)]
        [DataRow(0, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, false, 0)]
        [DataRow(int.MaxValue, 31, false, int.MaxValue)]
        [DataRow(int.MaxValue, 31, true, -1)]
        [DataRow(int.MinValue, 31, true, int.MinValue)]
        [DataRow(int.MinValue, 31, false, 0)]
        public void SetBitTest5(int iVal, int iBit, bool xVal, int iExp)
        {
            Assert.AreEqual(iExp, iVal.SetBit(iBit, xVal));
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0, 0, false, 0)]
        [DataRow(0, 0, true, 1)]
        [DataRow(1, 0, true, 1)]
        [DataRow(1, 0, false, 0)]
        [DataRow(0, -1, false, 0)]
        [DataRow(int.MaxValue, 0, false, int.MaxValue - 1)]
        [DataRow(int.MaxValue, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, true, int.MaxValue)]
        [DataRow(int.MaxValue - 1, 0, false, int.MaxValue - 1)]
        [DataRow(0, 1, false, 0)]
        [DataRow(0, 1, true, 2)]
        [DataRow(2, 1, true, 2)]
        [DataRow(2, 1, false, 0)]
        [DataRow(int.MaxValue, 1, false, int.MaxValue - 2)]
        [DataRow(int.MaxValue, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, true, int.MaxValue)]
        [DataRow(int.MaxValue - 2, 1, false, int.MaxValue - 2)]
        [DataRow(0, 2, false, 0)]
        [DataRow(0, 2, true, 4)]
        [DataRow(4, 2, true, 4)]
        [DataRow(4, 2, false, 0)]
        [DataRow(int.MaxValue, 2, false, int.MaxValue - 4)]
        [DataRow(int.MaxValue, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, true, int.MaxValue)]
        [DataRow(int.MaxValue - 4, 2, false, int.MaxValue - 4)]
        [DataRow(0, 31, false, 0)]
        [DataRow(0, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, false, 0)]
        [DataRow(int.MaxValue, 31, false, int.MaxValue)]
        [DataRow(int.MaxValue, 31, true, uint.MaxValue)]
        [DataRow(int.MaxValue + 1L, 31, true, int.MaxValue + 1L)]
        [DataRow(int.MaxValue + 1L, 31, false, 0)]
        [DataRow(0, 63, false, 0)]
        [DataRow(0, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, false, 0)]
        [DataRow(long.MaxValue, 63, false, long.MaxValue)]
        [DataRow(long.MaxValue, 63, true, -1)]
        [DataRow(long.MinValue, 63, true, long.MinValue)]
        [DataRow(long.MinValue, 63, false, 0)]
        public void SetBitTest6(long lVal, int iBit, bool xVal, long lExp)
        {
            Assert.AreEqual(lExp, lVal.SetBit(iBit, xVal));
        }

        [TestMethod()]
        [TestProperty("Author", "JC")]
        [DataRow(0u, 0, false, 0u)]
        [DataRow(0u, 0, true, 1u)]
        [DataRow(1u, 0, true, 1u)]
        [DataRow(1u, 0, false, 0u)]
        [DataRow(0u, -1, false, 0u)]
        [DataRow(uint.MaxValue, 0, false, uint.MaxValue - 1)]
        [DataRow(uint.MaxValue, 0, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 1, 0, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 1, 0, false, uint.MaxValue - 1)]
        [DataRow(0u, 1, false, 0u)]
        [DataRow(0u, 1, true, 2u)]
        [DataRow(2u, 1, true, 2u)]
        [DataRow(2u, 1, false, 0u)]
        [DataRow(uint.MaxValue, 1, false, uint.MaxValue - 2)]
        [DataRow(uint.MaxValue, 1, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 2, 1, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 2, 1, false, uint.MaxValue - 2)]
        [DataRow(0u, 2, false, 0u)]
        [DataRow(0u, 2, true, 4u)]
        [DataRow(4u, 2, true, 4u)]
        [DataRow(4u, 2, false, 0u)]
        [DataRow(uint.MaxValue, 2, false, uint.MaxValue - 4)]
        [DataRow(uint.MaxValue, 2, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 4, 2, true, uint.MaxValue)]
        [DataRow(uint.MaxValue - 4, 2, false, uint.MaxValue - 4)]
        [DataRow(0u, 31, false, 0u)]
        [DataRow(0u, 31, true, int.MaxValue + 1ul)]
        [DataRow(int.MaxValue + 1ul, 31, true, int.MaxValue + 1ul)]
        [DataRow(int.MaxValue + 1ul, 31, false, 0u)]
        [DataRow(uint.MaxValue, 31, false, (uint)int.MaxValue)]
        [DataRow(uint.MaxValue, 31, true, uint.MaxValue)]
        [DataRow(int.MaxValue + 1lu, 31, true, int.MaxValue + 1ul)]
        [DataRow(int.MaxValue + 1lu, 31, false, 0u)]
        [DataRow(0u, 63, false, 0u)]
        [DataRow(0u, 63, true, ulong.MaxValue / 2 + 1)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, true, ulong.MaxValue / 2 + 1)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, false, 0u)]
        [DataRow(ulong.MaxValue / 2, 63, false, ulong.MaxValue / 2)]
        [DataRow(ulong.MaxValue / 2, 63, true, ulong.MaxValue)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, true, ulong.MaxValue / 2 + 1)]
        [DataRow(ulong.MaxValue / 2 + 1, 63, false, 0u)]
        public void SetBitTest7(ulong uVal, int iBit, bool xVal, ulong uExp)
        {
            Assert.AreEqual(uExp, uVal.SetBit(iBit, xVal));
        }
    }
}