// ***********************************************************************
// Assembly   : AA06_ConvertersTests
// Author    : Mir
// Created          : 05-11-2023
//
// Last Modified By : Mir
// Last Modified On : 05-11-2023
// ***********************************************************************
// <copyright file="Bool2VisibilityConverterTests.cs" company="AA06_ConvertersTests">
//    Copyright (c) JC-Soft. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Globalization;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace AA06_Converters_4.ValueConverter.Tests;


/// <summary>
/// Defines test class Bool2VisibilityConverterTests.
/// </summary>
/// <autogeneratedoc />
[TestClass()]
public class Bool2VisibilityConverterTests
{
    /// <summary>
 /// The converter
    /// </summary>
    /// <autogeneratedoc />
    Bool2VisibilityConverter testConv = new();

    /// <summary>
    /// Converts the correctly formats value.
    /// </summary>
    /// <param name="value">The value.</param>
    /// <param name="expected">The expected.</param>
    /// <autogeneratedoc />
    [DataTestMethod]
    [DataRow(10.5, true)]
    [DataRow(0.99, true)]
  [DataRow(true, true)]
    [DataRow(false, false)]
    [DataRow("Hallo", true)]
    [DataRow(null, true)]
    public void ConvertTest(object? value, bool expected)
 {
        if (value is double d) value = (decimal)d;
      var result = testConv.Convert(value!, typeof(bool), null!, CultureInfo.InvariantCulture);
        Assert.AreEqual(expected, result);
    }

    /// <summary>
    /// Defines the test method ConvertBackTest.
    /// </summary>
    /// <autogeneratedoc />
    [DataTestMethod()]
    [DataRow(true, true)]
    [DataRow(false, false)]
    [DataRow(false, null)]
  public void ConvertBackTest(bool xExp, object? eVal)
    {
   Assert.AreEqual(xExp, testConv.ConvertBack(eVal!,typeof(object),null!,CultureInfo.InvariantCulture));
    }
}