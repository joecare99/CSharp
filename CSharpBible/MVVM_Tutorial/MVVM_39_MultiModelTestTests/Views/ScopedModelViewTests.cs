// ***********************************************************************
// Assembly         : MVVM_39_MultiModelTest_netTests
// Author           : Mir
// Created          : 05-14-2023
//
// Last Modified By : Mir
// Last Modified On : 05-14-2023
// ***********************************************************************
// <copyright file="ScopedModelViewTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MVVM_39_MultiModelTest.Models;
using MVVM.View.Extension;
using NSubstitute;
using System.Threading;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_39_MultiModelTest.Views.Tests
{
    /// <summary>
    /// Defines test class ScopedModelViewTests.
    /// </summary>
    /// <autogeneratedoc />
    [TestClass()]
    public class ScopedModelViewTests
    {
#pragma warning disable CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.
        /// <summary>
        /// The test view
        /// </summary>
        /// <autogeneratedoc />
        ScopedModelView testView;
        private ISystemModel systemModel;
        private ISystemModel scopedModel;
#pragma warning restore CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.

        /// <summary>
        /// Initializes this instance.
        /// </summary>
        /// <autogeneratedoc />
        [TestInitialize]
        public void Init()
        {
            systemModel = Substitute.For<ISystemModel>();
            scopedModel = Substitute.For<ISystemModel>();
            IoC.GetReqSrv = (t) => t switch
            {
                _ when t == typeof(ISystemModel) => systemModel,
                _ when t == typeof(IScopedModel) => scopedModel,
                _ => throw new System.NotImplementedException()
            };
            var t = new Thread(() => testView = new());
            t.SetApartmentState(ApartmentState.STA); //Set the thread to STA
            t.Start();
            t.Join(); //Wait for the thread to end
        }

        /// <summary>
        /// Defines the test method MainWindowTest.
        /// </summary>
        /// <autogeneratedoc />
        [TestMethod()]
        public void MainWindowTest()
        {
            Assert.IsNotNull(testView);
            Assert.IsInstanceOfType(testView, typeof(ScopedModelView));    
        }
    }
}
