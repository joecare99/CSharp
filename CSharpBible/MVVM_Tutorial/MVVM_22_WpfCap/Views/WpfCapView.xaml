<Page x:Class="MVVM_22_WpfCap.Views.WpfCapView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MVVM_22_WpfCap.Views"
      xmlns:p="clr-namespace:MVVM_22_WpfCap.Properties"
      xmlns:mvvm="clr-namespace:MVVM_22_WpfCap.ViewModel"
      xmlns:ioc="clr-namespace:MVVM.View.Extension;assembly=MVVM_BaseLib"
      xmlns:vc="clr-namespace:MVVM_22_WpfCap.Converter"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="WpfCapView"
      DataContext="{ioc:IoC Type=mvvm:WpfCapViewModel}">
    <d:Page.DataContext>
        <mvvm:WpfCapViewModel/>
    </d:Page.DataContext>
    <Page.Resources>
        <vc:EnumToColorStringConverter x:Key="vcToColor">
            <vc:EnumToColorStringConverter.colors>
                <Color>Black</Color>
                <Color>Yellow</Color>
                <Color>Red</Color>
                <Color>Green</Color>
                <Color>Blue</Color>
            </vc:EnumToColorStringConverter.colors>
        </vc:EnumToColorStringConverter>
        <vc:IntToStringConverter x:Key="vcToString"/>
        <Style TargetType="Rectangle" x:Key="rBase">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Opacity" Value="0.95"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="20" ShadowDepth="10"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ButtonBase">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Opacity" Value="0.85"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="20" ShadowDepth="10"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsFocused" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Margin" To="1"/>
                                <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Opacity" To="0.95"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Duration="0:0:1" Storyboard.TargetProperty="Margin"/>
                                <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Opacity" Value="1.0"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource ButtonBase}"/>
        <Style TargetType="Button" x:Key="ButtonV" BasedOn="{StaticResource  ButtonBase}">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsFocused" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Width" To="75"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="Width"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Width" Value="80"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>

        </Style>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="55*"/>
            <ColumnDefinition Width="463*"/>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="182*"/>
        </Grid.ColumnDefinitions>
        <Viewbox Grid.Column="1" Grid.Row="1" Margin="0,0,0,0">
            <StackPanel>

                <ItemsControl   ItemsSource="{Binding Cols}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Width="320"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="U"  Command="{Binding MoveUp}" Height="30" Width="70" CommandParameter="{Binding This}" Style="{StaticResource ButtonV}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl   ItemsSource="{Binding Rows}" >
                    <!--ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel-->
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="420" Height="50">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>
                                <Button Content="L" Command="{Binding MoveLeft}" CommandParameter="{Binding This}"/>
                                <Button Content="R" Grid.Column="5" Command="{Binding MoveRight}" CommandParameter="{Binding This}"/>
                                <Rectangle Grid.Column="1" Style="{StaticResource rBase}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding TileColor, ConverterParameter=0, Converter={StaticResource vcToColor}, Mode=OneWay}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="2" Style="{StaticResource rBase}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding TileColor, ConverterParameter=1, Converter={StaticResource vcToColor}, Mode=OneWay}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" Style="{StaticResource rBase}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding TileColor, ConverterParameter=2, Converter={StaticResource vcToColor}, Mode=OneWay}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="4" Style="{StaticResource rBase}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding TileColor, ConverterParameter=3, Converter={StaticResource vcToColor}, Mode=OneWay}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl   ItemsSource="{Binding Cols}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Width="320"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="D"  Command="{Binding MoveDown}" Height="30" Width="70" CommandParameter="{Binding This}" Style="{StaticResource ButtonV}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </Viewbox>
        <Button Content="Shuffle" Command="{Binding ShuffleCommand}"  Grid.Column="2" Grid.Row="2"/>
    </Grid>
</Page>
