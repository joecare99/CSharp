// ***********************************************************************
// Assembly         : MVVM_35_CommunityToolkit_netTests
// Author           : Mir
// Created          : 05-14-2023
//
// Last Modified By : Mir
// Last Modified On : 05-14-2023
// ***********************************************************************
// <copyright file="TemplateViewModelTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.ComponentModel;
using MVVM.ViewModel;
using CommunityToolkit.Mvvm.ComponentModel;
using System.Collections.Generic;
using System;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_35_CommunityToolkit.ViewModels.Tests;

/// <summary>
/// Defines test class TemplateViewModelTests.
/// </summary>
/// <autogeneratedoc />
[TestClass()]
public class CommunitToolkitViewModelTests : BaseTestViewModel<CommunitToolkitViewModel>
{
    [TestInitialize]
    public override void Init()
    {
        CommunitToolkitViewModel.GetNow = () => new DateTime(2023,12,31);
        base.Init();            
    }
    /// <summary>
    /// Defines the test method SetupTest.
    /// </summary>
    /// <autogeneratedoc />
    [TestMethod()]
    public void SetupTest()
    {
        Assert.IsNotNull(testModel);
        Assert.IsInstanceOfType(testModel, typeof(CommunitToolkitViewModel));
        Assert.IsInstanceOfType(testModel, typeof(ObservableObject));
        Assert.IsInstanceOfType(testModel, typeof(INotifyPropertyChanged));
    }

    /// <summary>
    /// Defines the test method SetupTest.
    /// </summary>
    /// <autogeneratedoc />
    [DataTestMethod()]
    [DataRow("", "", "", new[]{ "Do(,,)", "PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=\r\nPropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=Do(,,)\r\n" })]
    [DataRow("1", "", "", new[]{ "Do(1,,)", @"PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop1)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop1)=1
CanExChanged(CommunityToolkit.Mvvm.Input.RelayCommand)=False
PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=Do(1,,)
" })]
    [DataRow("", "2", "", new[]{ "Do(,2,)", @"PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop2)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop2)=2
CanExChanged(CommunityToolkit.Mvvm.Input.RelayCommand)=False
PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=Do(,2,)
" })]
    [DataRow("", "", "3", new[]{ "Do(,,3)", @"PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop3)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop3)=3
CanExChanged(CommunityToolkit.Mvvm.Input.RelayCommand)=False
PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=Do(,,3)
" })]
    [DataRow("1", "2", "3", new[] { "Do(1,2,3)", @"PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop1)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop1)=1
CanExChanged(CommunityToolkit.Mvvm.Input.RelayCommand)=False
PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop2)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop2)=2
CanExChanged(CommunityToolkit.Mvvm.Input.RelayCommand)=False
PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop3)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop3)=3
CanExChanged(CommunityToolkit.Mvvm.Input.RelayCommand)=True
PropChgn(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=
PropChg(MVVM_35_CommunityToolkit.ViewModels.CommunitToolkitViewModel,Prop4)=Do(1,2,3)
" })]
    public void DoClickMeTest(string s1, string s2, string s3, string[] asExp)
    {
        testModel.Prop1 = s1;
        testModel.Prop2 = s2;
        testModel.Prop3 = s3;
        testModel.DoClickMeCommand.Execute(null);
        Assert.AreEqual(asExp[0], testModel.Prop4);
        Assert.AreEqual(asExp[1], DebugLog);
    }

    protected override Dictionary<string, object?> GetDefaultData() 
        => new() {
            {nameof(CommunitToolkitViewModel.Now),new DateTime(2023,12,31) },
            {nameof(CommunitToolkitViewModel.Prop1),"" },
            {nameof(CommunitToolkitViewModel.Prop2),"" },
            {nameof(CommunitToolkitViewModel.Prop3),"" },
            {nameof(CommunitToolkitViewModel.Prop4),"" },

        };
}
