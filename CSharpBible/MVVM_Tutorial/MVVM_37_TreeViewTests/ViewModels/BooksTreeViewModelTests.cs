// ***********************************************************************
// Assembly         : MVVM_37_TreeView_netTests
// Author           : Mir
// Created          : 05-14-2023
//
// Last Modified By : Mir
// Last Modified On : 05-14-2023
// ***********************************************************************
// <copyright file="TemplateViewModelTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.ComponentModel;
using MVVM.ViewModel;
using System.Windows;
using MVVM_37_TreeView.Models;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_37_TreeView.ViewModels.Tests
{
    /// <summary>
    /// Defines test class TemplateViewModelTests.
    /// </summary>
    /// <autogeneratedoc />
    [TestClass()]
    public class BooksTreeViewModelTests:BaseTestViewModel
    {
#pragma warning disable CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.
        /// <summary>
        /// The test model
        /// </summary>
        /// <autogeneratedoc />
        BooksTreeViewModel testModel;
#pragma warning restore CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.

        /// <summary>
        /// Initializes this instance.
        /// </summary>
        /// <autogeneratedoc />
        [TestInitialize]
        public void Init()
        {
            testModel = new();
            testModel.PropertyChanged += OnVMPropertyChanged;
            if (testModel is INotifyPropertyChanging npchgn)
                npchgn.PropertyChanging += OnVMPropertyChanging;
            ClearLog();
        }

        /// <summary>
        /// Defines the test method SetupTest.
        /// </summary>
        /// <autogeneratedoc />
        [TestMethod()]
        public void SetupTest()
        {
            Assert.IsNotNull(testModel);
            Assert.IsInstanceOfType(testModel, typeof(BooksTreeViewModel));
            Assert.IsInstanceOfType(testModel, typeof(BaseViewModelCT));
            Assert.IsInstanceOfType(testModel, typeof(INotifyPropertyChanged));
        }

        [DataTestMethod]
        [DataRow(null, new[] {"" })]
        [DataRow("1", new[] { "" })]
        [DataRow("2", new[] { "PropChgn(MVVM_37_TreeView.ViewModels.BooksTreeViewModel,SelectedBook)=\r\nPropChg(MVVM_37_TreeView.ViewModels.BooksTreeViewModel,SelectedBook)=Book { Title = 2, Author = 3, Category = 1, Ratings = System.Int32[] }\r\n" })]
        public void DoSelectedItemChangedTest(object prop, string[] asExp)
        {
            if (prop?.ToString() == "1")
                prop = new RoutedPropertyChangedEventArgs<object>("0", "1");
            if (prop is string s && s == "2")
                prop = new RoutedPropertyChangedEventArgs<object>(null!,new CategorizedBooksViewModel() { This= new Book("2", "3", "1", new int[] { 5 }) }) ;
            testModel.DoSelectedItemChangedCommand.Execute(prop);
            Assert.AreEqual(asExp[0],DebugLog);
        }
    }
}
