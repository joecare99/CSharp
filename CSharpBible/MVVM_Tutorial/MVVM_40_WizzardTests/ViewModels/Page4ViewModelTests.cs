// ***********************************************************************
// Assembly         : MVVM_40_Wizzard_netTests
// Author           : Mir
// Created          : 05-14-2023
//
// Last Modified By : Mir
// Last Modified On : 05-14-2023
// ***********************************************************************
// <copyright file="Page4ViewModelTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.ComponentModel;
using MVVM.ViewModel;
using MVVM.View.Extension;
using System;
using NSubstitute;
using MVVM_40_Wizzard.Models;
using System.Collections.Generic;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_40_Wizzard.ViewModels.Tests
{
    /// <summary>
    /// Defines test class Page4ViewModelTests.
    /// </summary>
    /// <autogeneratedoc />
    [TestClass()]
    public class Page4ViewModelTests:BaseTestViewModel<Page4ViewModel>
    {
#pragma warning disable CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.
        private IWizzardModel? _model;
#pragma warning restore CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.

        /// <summary>
        /// Initializes this instance.
        /// </summary>
        /// <autogeneratedoc />
        [TestInitialize]
        public override void Init()
        {
            IoC.GetReqSrv=(t)=>t switch
            {
                Type _t when _t == typeof(IWizzardModel) => _model ??= Substitute.For<IWizzardModel>(),
                _ => null
            };
            base.Init();
        }

        /// <summary>
        /// Defines the test method SetupTest.
        /// </summary>
        /// <autogeneratedoc />
        [TestMethod()]
        public void SetupTest()
        {
            Assert.IsNotNull(testModel);
            Assert.IsInstanceOfType(testModel, typeof(Page4ViewModel));
            Assert.IsInstanceOfType(testModel, typeof(BaseViewModelCT));
            Assert.IsInstanceOfType(testModel, typeof(INotifyPropertyChanged));
            Assert.IsNotNull(_model);
        }

        [DataTestMethod]
        [DataRow(nameof(IWizzardModel.AdditOptions), new[] { "" })]
        [DataRow(nameof(IWizzardModel.Now), new[] { "" })]
        [DataRow(nameof(IWizzardModel.SubSelection), new[] { "PropChg(MVVM_40_Wizzard.ViewModels.Page4ViewModel,SubSelection)=\r\n" })]
        [DataRow(nameof(IWizzardModel.SubOptions), new[] { "" })]
        [DataRow(nameof(IWizzardModel.MainSelection), new[] { "PropChg(MVVM_40_Wizzard.ViewModels.Page4ViewModel,MainSelection)=1. Entry\r\n" })]
        [DataRow(nameof(IWizzardModel.MainOptions), new[] { "" })]
        [DataRow(nameof(IWizzardModel.Additional1), new[] { "PropChg(MVVM_40_Wizzard.ViewModels.Page4ViewModel,Additional1)=\r\n" })]
        [DataRow(nameof(IWizzardModel.Additional2), new[] { "PropChg(MVVM_40_Wizzard.ViewModels.Page4ViewModel,Additional2)=\r\n" })]
        [DataRow(nameof(IWizzardModel.Additional3), new[] { "PropChg(MVVM_40_Wizzard.ViewModels.Page4ViewModel,Additional3)=\r\n" })]
        public void OnMPChangedTest(string prop, string[] asExp)
        {
            _model.PropertyChanged += Raise.Event<PropertyChangedEventHandler>(_model, new PropertyChangedEventArgs(prop));
            Assert.AreEqual(asExp[0], DebugLog);
        }

    }
}
