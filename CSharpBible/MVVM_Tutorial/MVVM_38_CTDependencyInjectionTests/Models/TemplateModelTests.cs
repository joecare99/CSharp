// ***********************************************************************
// Assembly         : MVVM_38_CTDependencyInjectionTests
// Author           : Mir
// Created          : 05-19-2023
//
// Last Modified By : Mir
// Last Modified On : 05-19-2023
// ***********************************************************************
// <copyright file="TemplateModelTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using CommunityToolkit.Mvvm.ComponentModel;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MVVM.View.Extension;
using MVVM.ViewModel;
using MVVM_38_CTDependencyInjection.Models.Interfaces;
using NSubstitute;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_38_CTDependencyInjection.Models.Tests
{
    /// <summary>
    /// Defines test class TemplateModelTests.
    /// Implements the <see cref="BaseTestViewModel" />
    /// </summary>
    /// <seealso cref="BaseTestViewModel" />
    /// <autogeneratedoc />
    [TestClass()]
    public class TemplateModelTests : BaseTestViewModel<TemplateModel>
    {
#pragma warning disable CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.
        private ITimer _testTimer;
        private ISysTime _testSystime;
        private IUserRepository _testUser;
#pragma warning restore CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.

        protected override Dictionary<string, object?> GetDefaultData()
            => new() { {"",null } };

        [TestInitialize]
        public override void Init()
        {
            IoC.GetReqSrv = (t) => t switch
            {
                _ when t == typeof(ITimer) => _testTimer,
                _ when t == typeof(ISysTime) => _testSystime,
                _ when t == typeof(IUserRepository) => _testUser,
                _ => throw new System.NotImplementedException()
            };
            _testTimer = Substitute.For<ITimer>();
            _testSystime = Substitute.For<ISysTime>();
            _testUser = Substitute.For<IUserRepository>();
            base.Init();
        }

        /// <summary>
        /// Defines the test method SetupTest.
        /// </summary>
        [TestMethod()]
        public void SetupTest()
        {
            Assert.IsNotNull(testModel);
            Assert.IsInstanceOfType(testModel, typeof(TemplateModel));
            Assert.IsInstanceOfType(testModel, typeof(ObservableObject));
            Assert.IsInstanceOfType(testModel, typeof(INotifyPropertyChanged));
        }

        [TestMethod()]
        public void GetUsersTest()
        {
            _testUser.GetUsers().Returns(new[] { "Peter" });
            var result = testModel.GetUsers().ToArray();
            CollectionAssert.AreEqual(new[] { "Peter" }, result);
        }
    }
}
