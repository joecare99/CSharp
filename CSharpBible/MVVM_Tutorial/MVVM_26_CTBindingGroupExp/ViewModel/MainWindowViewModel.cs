// ***********************************************************************
// Assembly         : MVVM_26_CTBindingGroupExp
// Author           : Mir
// Created          : 10-23-2022
//
// Last Modified By : Mir
// Last Modified On : 10-23-2022
// ***********************************************************************
// <copyright file="MainWindowViewModel.cs" company="JC-Soft">
//     Copyright © JC-Soft 2020
// </copyright>
// <summary></summary>
// ***********************************************************************
using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using MVVM.ViewModel;
using System;
using System.ComponentModel.DataAnnotations;
using System.Windows.Controls;
using System.Windows.Data;
using MVVM_26_CTBindingGroupExp.Properties;

/// <summary>
/// The ViewModel namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_26_CTBindingGroupExp.ViewModel
{
    /// <summary>
    /// Class MainWindowViewModel.
    /// Implements the <see cref="BaseViewModel" />
    /// </summary>
    /// <seealso cref="BaseViewModel" />
    [NotifyDataErrorInfo]
    public partial class MainWindowViewModel : BaseViewModelCT
    {
        #region Properties
        /// <summary>
        /// The description
        /// </summary>
        /// <autogeneratedoc />
        [ObservableProperty]
        [Required(ErrorMessageResourceType =typeof(Resources),ErrorMessageResourceName =nameof(Resources.Err_MustNotBeEmpty))]
        private string _description="Bumlux";

        /// <summary>
        /// The price
        /// </summary>
        [ObservableProperty]
        [Range(0.001,double.MaxValue, ErrorMessageResourceType = typeof(Resources), ErrorMessageResourceName = nameof(Resources.Err_MustNotBeEmpty))]
        private decimal _price=(decimal)0.00;

        /// <summary>
        /// The date
        /// </summary>
        [ObservableProperty]
        [Required(ErrorMessageResourceType = typeof(Resources), ErrorMessageResourceName = nameof(Resources.Err_MustNotBeEmpty))]
        private DateTime _date=DateTime.Now.AddDays(7);

        /// <summary>
        /// Gets or sets the data binding.
        /// </summary>
        /// <value>The data binding.</value>
        /// <autogeneratedoc />
        public BindingGroup? DataGroup { get; set; } = default;

        public Func<string, bool> OnShowMessage { get; set; } = default;
        #endregion

        /// <summary>
        /// Initializes a new instance of the <see cref="MainWindowViewModel"/> class.
        /// </summary>
        /// <autogeneratedoc />
        public MainWindowViewModel()
        {
        }

        private bool canCancel(object obj)
        {
            return true;// DataGroup?.IsDirty ?? false;
        }

        [RelayCommand(CanExecute =nameof(canCancel))]
        private void Cancel(object obj)
        {
            // Cancel the pending changes and begin a new edit transaction.
            DataGroup?.CancelEdit();
            DataGroup?.BeginEdit();
        }

        private bool canSubmitData(object obj)
        {
            return true;// DataGroup?.IsDirty ?? false;
        }

        [RelayCommand(CanExecute = nameof(canSubmitData))]
        private void Submit(object obj)
        {
            if (DataGroup?.CommitEdit() ?? false)
            {
                OnShowMessage?.Invoke(Resources.Msg_DataSubmitted);
                DataGroup?.BeginEdit();
            }
        }

        public void ItemError(object sender, ValidationErrorEventArgs e)
        {
            if (e.Action == ValidationErrorEventAction.Added)
            {
                OnShowMessage?.Invoke(e.Error.ErrorContent.ToString());
            }
        }
    }
}
