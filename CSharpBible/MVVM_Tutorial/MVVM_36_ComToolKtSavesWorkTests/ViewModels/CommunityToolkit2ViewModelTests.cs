// ***********************************************************************
// Assembly         : MVVM_36_ComToolKtSavesWork_netTests
// Author           : Mir
// Created          : 05-14-2023
//
// Last Modified By : Mir
// Last Modified On : 05-14-2023
// ***********************************************************************
// <copyright file="CommunityToolkit2ViewModelTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.ComponentModel;
using MVVM.ViewModel;
using CommunityToolkit.Mvvm.DependencyInjection;
using Microsoft.Extensions.DependencyInjection;
using MVVM_36_ComToolKtSavesWork.Models;
using System;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM_36_ComToolKtSavesWork.ViewModels.Tests
{
    /// <summary>
    /// Defines test class CommunityToolkit2ViewModelTests.
    /// </summary>
    /// <autogeneratedoc />
    [TestClass()]
    public class CommunityToolkit2ViewModelTests:BaseTestViewModel
    {
#pragma warning disable CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.
        /// <summary>
        /// The test model
        /// </summary>
        /// <autogeneratedoc />
        CommunityToolkit2ViewModel testModel;
#pragma warning restore CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.

        private IDebugLog _debugLog;
        private IGetResult _getResult;

        /// <summary>
        /// Initializes this instance.
        /// </summary>
        /// <autogeneratedoc />
        [TestInitialize]
        public void Init()
        {
            //Ioc. = null;
            try
            {
                Ioc.Default.ConfigureServices(new ServiceCollection()
                    .AddSingleton<IUserRepository, TestUserRepository>()
                    .AddSingleton<IDebugLog, DebugLog>()
                    .AddSingleton<IGetResult, GetResult>()
                    .BuildServiceProvider());
            }
            catch { }
            _debugLog = Ioc.Default.GetRequiredService<IDebugLog>();
            _getResult = Ioc.Default.GetRequiredService<IGetResult>();
            _getResult.Register("Login", GetLoginResult);
            testModel = new();
            testModel.PropertyChanged += OnVMPropertyChanged;
            if (testModel is INotifyPropertyChanging npchgn)
                npchgn.PropertyChanging += OnVMPropertyChanging;
            ClearLog();
        }

        private object? GetLoginResult(object[] arg)
        {
            if (arg.Length == 2
                && arg[0] is string username
                && arg[1] is string password
                && username == "User1")
                return new User() { Username = "User", Id = 1 };
            else
                return null;
        }

        /// <summary>
        /// Defines the test method SetupTest.
        /// </summary>
        /// <autogeneratedoc />
        [TestMethod()]
        public void SetupTest()
        {
            Assert.IsNotNull(testModel);
            Assert.IsInstanceOfType(testModel, typeof(CommunityToolkit2ViewModel));
            Assert.IsInstanceOfType(testModel, typeof(BaseViewModelCT));
            Assert.IsInstanceOfType(testModel, typeof(INotifyPropertyChanged));
        }
    }
}
