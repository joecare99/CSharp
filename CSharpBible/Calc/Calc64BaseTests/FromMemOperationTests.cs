// ***********************************************************************
// Assembly         : Calc64BaseTests
// Author           : Mir
// Created          : 08-28-2022
//
// Last Modified By : Mir
// Last Modified On : 08-28-2022
// ***********************************************************************
// <copyright file="FromMemOperationTests.cs" company="JC-Soft">
//     Copyright © JC-Soft 2022
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace Calc64Base.Tests
{
    /// <summary>
    /// Defines test class FromMemOperationTests.
    /// </summary>
    /// <autogeneratedoc />
    [TestClass()]
    public class FromMemOperationTests
    {
        /// <summary>
        /// Defines the test method FromMemOperationTest.
        /// </summary>
        /// <autogeneratedoc />
        [TestMethod()]
        public void FromMemOperationTest()
        {
            var fmco = new FromMemOperation("?3", "Quest3", (a, m) => a << (int)(m%64));
            Assert.AreEqual("?3", fmco.ShortDesc);
            Assert.AreEqual("Quest3", fmco.LongDesc);
            Assert.AreEqual(true, fmco.NeedAccumulator);
            Assert.AreEqual(false, fmco.NeedRegister);
            Assert.AreEqual(true, fmco.NeedMemory);
        }

        /// <summary>
        /// Defines the test method ExecuteTest.
        /// </summary>
        /// <autogeneratedoc />
        [TestMethod()]
        public void ExecuteTest()
        {
            var fmco = new FromMemOperation("?", "Quest", (a, m) => a << (int)(m % 64));
            var arg = CalcOperation.CreateArguments(fmco);
            arg[0] = 5L;
            arg[1] = 2L;
            Assert.AreEqual(true, fmco.Execute(ref arg));
            Assert.AreEqual(20L, arg[0]);
            Assert.AreEqual(2L, arg[1]);
        }

    }
}