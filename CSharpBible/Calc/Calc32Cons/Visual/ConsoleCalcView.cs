// ***********************************************************************
// Assembly         : Calc32Cons
// Author           : Mir
// Created          : 08-05-2022
//
// Last Modified By : Mir
// Last Modified On : 10-22-2022
// ***********************************************************************
// <copyright file="ConsoleCalcView.cs" company="JC-Soft">
//     Copyright © JC-Soft 2021
// </copyright>
// <summary></summary>
// ***********************************************************************
using ConsoleLib;
using System;
using System.Drawing;
using Calc32.ViewModels.Interfaces;
using ConsoleLib.ConsoleLib.Interfaces;
using Calc32.Models;

/// <summary>
/// The Visual namespace.
/// </summary>
/// <autogeneratedoc />
namespace Calc32Cons.Visual
{
    /// <summary>
    /// Class ConsoleCalcView.
    /// Implements the <see cref="ConsoleLib.CommonControls.Panel" />
    /// </summary>
    /// <seealso cref="ConsoleLib.CommonControls.Panel" />
    public class ConsoleCalcView : ConsoleLib.CommonControls.Panel
    {
        private const int ciOperations = 14;

        /// <summary>
        /// The calculator
        /// </summary>
        private ICalculatorViewModel _model;
        /// <summary>
        /// The label accumulator
        /// </summary>
        private readonly ConsoleLib.CommonControls.Label lblAccumulator;

        /// <summary>
        /// Initializes a new instance of the <see cref="ConsoleCalcView" /> class.
        /// </summary>
        /// <param name="App">The application.</param>
        public ConsoleCalcView(ICalculatorViewModel model, IApplication App)
        {
            Parent = App;
            _model = model;
            Border = ConsoleFramework.doubleBoarder;
            ForeColor = ConsoleColor.Blue;
            BackColor = ConsoleColor.DarkBlue;
            BoarderColor = ConsoleColor.Green;
            Dimension = new Rectangle(3, 5, 50, 20);
            Shadow = true;

            ConsoleLib.CommonControls.Button[] btnNumbers = new ConsoleLib.CommonControls.Button[16];

            for (int i = 0; i < 10; i++)
            {
                var p = new Point(((i + 2) % 3) + 1, (i + 2) / 3);
                btnNumbers[i] = new ConsoleLib.CommonControls.Button
                {
                    Parent = this,
                    ForeColor = ConsoleColor.White,
                    BackColor = ConsoleColor.DarkGreen,
                    HLBackColor = ConsoleColor.Green,
                    Shadow = true,
                    Position = new Point(p.X * 8 + 2, 14 - p.Y * 2),
                    Tag = $"{i}",
                    Accelerator = i.ToString()[0],
                    Text = $"░{i}░",
                    Command = _model.NumberCommand
                };
            };
            btnNumbers[0].Position = new Point(btnNumbers[0].Position.X - 8, btnNumbers[0].Position.Y);

            ConsoleLib.CommonControls.Button[] btnCommandss = new ConsoleLib.CommonControls.Button[ciOperations];
            for (int i = 1; i < ciOperations; i++)
            {
                var p = new Point(0, 0);
                (p.X, p.Y) = i switch
                {
                    1 => (4, 1),
                    2 => (4, 3),
                    3 => (4, 4),
                    4 => (3, 4),
                    5 => (2, 4),
                    6 => (5, 0),
                    7 => (5, 1),
                    8 => (5, 2),
                    9 => (5, 3),
                    10 => (3, 0),
                    11 => (0, 4),
                    12 => (0, 3),
                    13 => (1, 4),
                    _ => (0, 0),
                };
                ;
                btnCommandss[i] = new ConsoleLib.CommonControls.Button
                {
                    Parent = this,
                    ForeColor = ConsoleColor.White,
                    BackColor = ConsoleColor.DarkCyan,
                    HLBackColor = ConsoleColor.Cyan,
                    Shadow = true,
                    Position = new Point(p.X * 8 + 2, 14 - p.Y * 2),
                    Tag = $"{(i + 3) % ciOperations - 3}",
                    Accelerator = (i == 1) ? '=' : CalculatorClass.sMode[i][0],
                    Text = (i == 1) ? "░=░" : $"░{CalculatorClass.sMode[i]}░",
                    Command = _model.OperationCommand
                };
            }
            btnCommandss[1].size = new Size(5, 3);
            btnCommandss[2].size = new Size(5, 3);
            btnCommandss[10].Text = $"{CalculatorClass.sMode[10]}";
            btnCommandss[12].Command = _model.BackSpaceCommand;

            lblAccumulator = new ConsoleLib.CommonControls.Label
            {
                Parent = this,
                ForeColor = ConsoleColor.White,
                BackColor = ConsoleColor.DarkCyan,
                Position = new Point(2, 1),
                size = new Size(38, 1),
                Text = "             ",
                Binding = (_model, nameof(_model.Accumulator))
            };

            lblAccumulator = new ConsoleLib.CommonControls.Label
            {
                Parent = this,
                ForeColor = ConsoleColor.White,
                BackColor = ConsoleColor.DarkCyan,
                Position = new Point(41, 1),
                size = new Size(5, 1),
                Text = "    ",
                Binding = (_model, nameof(_model.OperationText))
            };

            var btnCancel = new ConsoleLib.CommonControls.Button
            {
                Parent = this,
                ForeColor = ConsoleColor.White,
                BackColor = ConsoleColor.DarkGray,
                Shadow = true,
                Position = new Point(14, 16),
                Text = "░Close░",
            };
            btnCancel.OnClick += btnCancel_Click;

        }

        /// <summary>
        /// Handles the Click event of the btnCancel control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs" /> instance containing the event data.</param>
        private void btnCancel_Click(object? sender, EventArgs? e)
        {
            (Parent as ConsoleLib.CommonControls.Application)?.Stop();
        }

    }
}
