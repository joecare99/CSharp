// ***********************************************************************
// Assembly         : MVVM.Views.ConvertersTests
// Author           : Mir
// Created          : 05-11-2023
//
// Last Modified By : Mir
// Last Modified On : 05-11-2023
// ***********************************************************************
// <copyright file="CurrencyValueConverterTests.cs" company="MVVM_06_ConvertersTests">
//    Copyright (c) JC-Soft. All rights reserved.
// </copyright>
// <summary></summary>
// ***********************************************************************
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Globalization;
using System.Windows;

/// <summary>
/// The Tests namespace.
/// </summary>
/// <autogeneratedoc />
namespace MVVM.View.ValueConverter.Tests;


/// <summary>
/// Defines test class CurrencyValueConverterTests.
/// </summary>
/// <autogeneratedoc />
[TestClass()]
public class Bool2VisibilityConverterTests
{
    /// <summary>
    /// The converter
    /// </summary>
    /// <autogeneratedoc />
    Bool2VisibilityConverter testConv = new();

    /// <summary>
    /// Converts the correctly formats value.
    /// </summary>
    /// <param name="value">The value.</param>
    /// <param name="expected">The expected.</param>
    /// <autogeneratedoc />
    [DataTestMethod]
    [DataRow(true, Visibility.Visible)]
    [DataRow(false, Visibility.Hidden)]
    [DataRow(null, null)]
    public void ConvertTest(object? value, Visibility expected)
    {
        var result = testConv.Convert(value, typeof(string), null, CultureInfo.InvariantCulture);
        Assert.AreEqual(expected, result);
    }

    /// <summary>
    /// Defines the test method ConvertBackTest.
    /// </summary>
    /// <autogeneratedoc />
    [DataTestMethod]
    [DataRow(true, Visibility.Visible)]
    [DataRow(false, Visibility.Hidden)]
    [DataRow(false, Visibility.Collapsed)]
    [DataRow(false, null)]
    [DataRow(false, "Hallo")]
    public void ConvertBackTest(object? value, object expected)
    {
        var result = testConv.ConvertBack(expected, typeof(string), null, CultureInfo.InvariantCulture);
        Assert.AreEqual(value, result);
    }
}