<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Werner_Flaschbier_Base</name>
  </assembly>
  <members>
    <member name="T:Werner_Flaschbier_Base.Model.Direction">
      <summary>
   Enum Direction
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Offsets">
      <summary>
   Class Offsets.
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Direction.Up">
      <summary>
   Up
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Direction.West">
      <summary>
   The west
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Direction.Down">
      <summary>
   Down
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Direction.East">
      <summary>
   The east
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Direction.WestDown">
      <summary>
   The west down
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Direction.EastDown">
      <summary>
   The east down
   </summary>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Offsets.DirOffset(Direction)">
      <summary>
   Dirs the offset.
   </summary>
      <param name="d">The d.</param>
      <returns>Point.</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Offsets.DirOffset(System.Nullable{Direction},Point)">
      <summary>
   Dirs the offset.
   </summary>
      <param name="dir">The dir.</param>
      <param name="position">The position.</param>
      <returns>Point.</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Dirt">
      <summary>
   Class Dirt.
   Implements the <see cref="T:Werner_Flaschbier_Base.Model.PlayObject" /></summary>
      <seealso cref="T:Werner_Flaschbier_Base.Model.PlayObject" />
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Dirt.#ctor(System.Nullable{Field})">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Dirt" /> class.
   </summary>
      <param name="aField">a field.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Dirt.TestMove(System.Nullable{Direction})">
      <summary>
   Tests if the object can move in the given direction.
   </summary>
      <param name="dir">The directon to test</param>
      <returns>true: if the object can move in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Dirt.TryMove(System.Nullable{Direction})">
      <summary>
   Tries to move the object in the given direction.
   </summary>
      <param name="dir">The directon to move</param>
      <returns>true: if the object has moveed in the direction</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Enemy">
      <summary>
   Class Enemy.
   Implements the <see cref="T:Werner_Flaschbier_Base.Model.PlayObject" /></summary>
      <seealso cref="T:Werner_Flaschbier_Base.Model.PlayObject" />
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Enemy.direction">
      <summary>
   Gets the direction.
   </summary>
      <value>The direction.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Enemy.#ctor(System.Nullable{Field})">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Enemy" /> class.
   </summary>
      <param name="aField">a field.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Enemy.TestMove(System.Nullable{Direction})">
      <summary>
   Tests if the object can move in the given direction.
   </summary>
      <param name="dir">The directon to test</param>
      <returns>true: if the object can move in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Enemy.TryMove(System.Nullable{Direction})">
      <summary>
   Tries to move the object in the given direction.
   </summary>
      <param name="dir">The directon to move</param>
      <returns>true: if the object has moveed in the direction</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Field">
      <summary>
   Class Field.
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Destination">
      <summary>
   Class Destination.
   Implements the <see cref="T:Werner_Flaschbier_Base.Model.Space" /></summary>
      <seealso cref="T:Werner_Flaschbier_Base.Model.Space" />
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Field._item">
      <summary>
   The item
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Field.Position">
      <summary>
   Gets the position.
   </summary>
      <value>The position.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Field.Item">
      <summary>
   Gets or sets the item.
   </summary>
      <value>The item.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Field.Parent">
      <summary>
   Gets the parent.
   </summary>
      <value>The parent.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Field.fieldDef">
      <summary>
   Gets the field definition.
   </summary>
      <value>The field definition.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Field.GetFieldDef">
      <summary>
   Gets the field definition.
   </summary>
      <returns>FieldDef.</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Field.SetItem(System.Nullable{PlayObject})">
      <summary>
   Sets the item.
   </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Field.#ctor(Point,Playfield)">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Field" /> class.
   </summary>
      <param name="position">The position.</param>
      <param name="parentPlayObject">The parent play object.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Destination.#ctor(Point,Playfield)">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Destination" /> class.
   </summary>
      <param name="position">The position.</param>
      <param name="parentPlayObject">The parent play object.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Destination.GetFieldDef">
      <summary>
   Gets the field definition.
   </summary>
      <returns>FieldDef.</returns>
      <exception cref="T:System.ArgumentException">Illegal Item</exception>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.FieldDef">
      <summary>
   Enum FieldDef
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.FieldDefs">
      <summary>
   Class FieldDefs.
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Empty">
      <summary>
   The empty
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Dirt">
      <summary>
   The dirt
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Wall">
      <summary>
   The wall
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Destination">
      <summary>
   The destination
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Player">
      <summary>
   The player
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Stone">
      <summary>
   The stone
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDef.Enemy">
      <summary>
   The enemy
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.FieldDefs.SDef">
      <summary>
   The s definition
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.LevelDefs">
      <summary>
   Class LevelDefs.
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.LevelDefs.Count">
      <summary>
   Gets the count.
   </summary>
      <value>The count.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.LevelDefs.GetLevel(System.Int32)">
      <summary>
   Gets the level.
   </summary>
      <param name="level">The level.</param>
      <returns>System.Nullable&lt;FieldDef&gt;[].</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Player">
      <summary>
   Class Player.
   Implements the <see cref="T:Werner_Flaschbier_Base.Model.PlayObject" /></summary>
      <seealso cref="T:Werner_Flaschbier_Base.Model.PlayObject" />
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Player.IsAlive">
      <summary>
   Gets or sets a value indicating whether this instance is alive.
   </summary>
      <value>
        <c>true</c> if this instance is alive; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Player.#ctor(System.Nullable{Field})">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Player" /> class.
   </summary>
      <param name="aField">a field.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Player.Go(System.Nullable{Direction})">
      <summary>
   Goes the specified a dir.
   </summary>
      <param name="aDir">a dir.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Player.TestMove(System.Nullable{Direction})">
      <summary>
   Tests if the object can move in the given direction.
   </summary>
      <param name="dir">The directon to test</param>
      <returns>true: if the object can move in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Player.TryMove(System.Nullable{Direction})">
      <summary>
   Tries to move the object in the given direction.
   </summary>
      <param name="dir">The directon to move</param>
      <returns>true: if the object has moveed in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Player.MoveableDirs">
      <summary>
   Moveables the dirs.
   </summary>
      <returns>IEnumerable&lt;Direction&gt;.</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Playfield">
      <summary>
   Class Playfield.
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Playfield.Item(Point)">
      <summary>
   Gets or sets the <see cref="T:System.Nullable`1" /> with the specified p.
   </summary>
      <param name="p">The p.</param>
      <returns>System.Nullable&lt;Field&gt;.</returns>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Playfield.size">
      <summary>
   The size
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Playfield.Stones">
      <summary>
   The stones
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Playfield.Enemies">
      <summary>
   The enemies
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.Model.Playfield.player">
      <summary>
   The player
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Playfield.GameSolved">
      <summary>
   Gets a value indicating whether [game solved].
   </summary>
      <value>
        <c>true</c> if [game solved]; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Playfield.Setup(System.String[])">
      <summary>
   Setups the specified sf definition.
   </summary>
      <param name="SFDef">The sf definition.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Playfield.Setup(System.Nullable{FieldDef}[])">
      <summary>
   Setups the specified sf definition.
   </summary>
      <param name="SFDef">The sf definition.</param>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Playfield.ActiveObjects">
      <summary>
   Gets the active objects.
   </summary>
      <value>The active objects.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.Playfield.Spaces">
      <summary>
   Gets the spaces.
   </summary>
      <value>The spaces.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Playfield.Clear">
      <summary>
   Clears this instance.
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.PlayObject">
      <summary>
   Class PlayObject.
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.PlayObject.Position">
      <summary>
   Gets or sets the position.
   </summary>
      <value>The position of the player on the playfield</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.PlayObject.OldPosition">
      <summary>
   Gets or sets the old position.
   </summary>
      <value>The old position.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.PlayObject.Handled">
      <summary>
   Gets or sets a value indicating whether this <see cref="T:Werner_Flaschbier_Base.Model.PlayObject" /> is handled.
   </summary>
      <value>
        <c>true</c> if handled; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.Model.PlayObject.field">
      <summary>
   Gets or sets the field.
   </summary>
      <value>The field as reference.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.PlayObject.TestMove(System.Nullable{Direction})">
      <summary>
   Tests if the object can move in the given direction.
   </summary>
      <param name="dir">The directon to test</param>
      <returns>true: if the object can move in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.PlayObject.TryMove(System.Nullable{Direction})">
      <summary>
   Tries to move the object in the given direction.
   </summary>
      <param name="dir">The directon to move</param>
      <returns>true: if the object has moveed in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.PlayObject.#ctor(System.Nullable{Field})">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.PlayObject" /> class.
   </summary>
      <param name="aField">a field.</param>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Stone">
      <summary>
   Stones (Boulders) are Objects that fall if an <see cref="Empty" /> space
   is below them, or slip to the left or right if sitting on a
   <see cref="T:Werner_Flaschbier_Base.Model.Wall" /> or another <see cref="T:Werner_Flaschbier_Base.Model.Stone" /> if the places next
   to them and the place below that are <see cref="Empty" /></summary>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Stone.#ctor(System.Nullable{Field})">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Stone" /> class.
   </summary>
      <param name="aField">a field.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Stone.TestMove(System.Nullable{Direction})">
      <summary>
   Tests if the object can move in the given direction.
   </summary>
      <param name="dir">The directon to test</param>
      <returns>true: if the object can move in the direction</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Stone.TryMove(System.Nullable{Direction})">
      <summary>
   Tries to move the object in the given direction.
   </summary>
      <param name="dir">The direction to move</param>
      <returns>true: if the object has moved in the direction</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.Model.Wall">
      <summary>
   Class Wall.
   Implements the <see cref="T:Werner_Flaschbier_Base.Model.Field" /></summary>
      <seealso cref="T:Werner_Flaschbier_Base.Model.Field" />
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Wall.#ctor(Point,Playfield)">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.Model.Wall" /> class.
   </summary>
      <param name="position">The position.</param>
      <param name="parentPlayObject">The parent play object.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Wall.GetFieldDef">
      <summary>
   Gets the field definition.
   </summary>
      <returns>FieldDef.</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.Model.Wall.SetItem(System.Nullable{PlayObject})">
      <summary>
   Sets the item.
   </summary>
      <param name="value">The value.</param>
      <exception cref="T:System.ArgumentException">
      </exception>
    </member>
    <member name="T:Werner_Flaschbier_Base.Ressource.Resource1">
      <summary>
     Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Ressource.Resource1.ResourceManager">
      <summary>
     Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.Ressource.Resource1.Culture">
      <summary>
     Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
     Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.View.Visual">
      <summary>
   Class Visual.
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.View.Visual.myConsole">
      <summary>
   My console
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.View.Visual.keyAction">
      <summary>
   The key action
   </summary>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.Visual.SetGame(Game)">
      <summary>
   Sets the game.
   </summary>
      <param name="g">The g.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.Visual.FullRedraw(System.Nullable{System.Object},System.Nullable{EventArgs})">
      <summary>
   Fulls the redraw.
   </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.Visual.WriteTile(PointF,Tiles)">
      <summary>
   Writes the tile.
   </summary>
      <param name="p">The p.</param>
      <param name="tile">The tile.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.Visual.Sound(GameSound)">
      <summary>
   Sounds the specified gs.
   </summary>
      <param name="gs">The gs.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.Visual.CheckUserAction(UserAction@)">
      <summary>
   Checks the user action.
   </summary>
      <param name="action">The action.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.View.FullColor">
      <summary>
   Struct FullColor
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.View.VTileDef">
      <summary>
   Class VTileDef.
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.View.FullColor.foreGround">
      <summary>
   The fore ground
   </summary>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.VTileDef.GetTileStr(Tiles)">
      <summary>
   Gets the tile string.
   </summary>
      <param name="tile">The tile.</param>
      <returns>System.String[].</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.View.VTileDef.GetTileColors(Tiles)">
      <summary>
   Gets the tile colors.
   </summary>
      <param name="tile">The tile.</param>
      <returns>FullColor[].</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.ViewModel.Game">
      <summary>
   Class Game.
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.ViewModel.Game.size">
      <summary>
   Gets the size.
   </summary>
      <value>The size.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.ViewModel.Game.Lives">
      <summary>
   Gets the lives.
   </summary>
      <value>The lives.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.ViewModel.Game.TimeLeft">
      <summary>
   Gets the time left.
   </summary>
      <value>The time left.</value>
    </member>
    <member name="P:Werner_Flaschbier_Base.ViewModel.Game.isRunning">
      <summary>
   Gets a value indicating whether this instance is running.
   </summary>
      <value>
        <c>true</c> if this instance is running; otherwise, <c>false</c>.</value>
    </member>
    <member name="E:Werner_Flaschbier_Base.ViewModel.Game.visUpdate">
      <summary>
   Occurs when [vis update].
   </summary>
    </member>
    <member name="E:Werner_Flaschbier_Base.ViewModel.Game.visFullRedraw">
      <summary>
   Occurs when [vis full redraw].
   </summary>
    </member>
    <member name="E:Werner_Flaschbier_Base.ViewModel.Game.visShowHelp">
      <summary>
   Occurs when [vis show help].
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.ViewModel.Game.Item(Point)">
      <summary>
   Gets the <see cref="T:Werner_Flaschbier_Base.ViewModel.Tiles" /> with the specified p.
   </summary>
      <param name="p">The p.</param>
      <returns>Tiles.</returns>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Game.level">
      <summary>
   The level
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Game.MaxLives">
      <summary>
   The maximum lives
   </summary>
    </member>
    <member name="P:Werner_Flaschbier_Base.ViewModel.Game.Score">
      <summary>
   Gets or sets the score.
   </summary>
      <value>The score.</value>
    </member>
    <member name="M:Werner_Flaschbier_Base.ViewModel.Game.GetTile(Point)">
      <summary>
   Gets the tile.
   </summary>
      <param name="p">The p.</param>
      <returns>Tiles.</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.ViewModel.Game.OldPos(Point)">
      <summary>
   Olds the position.
   </summary>
      <param name="p">The p.</param>
      <returns>Point.</returns>
    </member>
    <member name="M:Werner_Flaschbier_Base.ViewModel.Game.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Werner_Flaschbier_Base.ViewModel.Game" /> class.
   </summary>
    </member>
    <member name="M:Werner_Flaschbier_Base.ViewModel.Game.Setup(System.Nullable{System.Int32})">
      <summary>
   Setups the specified new level.
   </summary>
      <param name="newLevel">The new level.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.ViewModel.Game.HandleUserAction(UserAction)">
      <summary>
   Handles the user action.
   </summary>
      <param name="action">The action.</param>
    </member>
    <member name="M:Werner_Flaschbier_Base.ViewModel.Game.GameStep">
      <summary>
   Games the step.
   </summary>
      <returns>System.Int32.</returns>
    </member>
    <member name="T:Werner_Flaschbier_Base.ViewModel.Tiles">
      <summary>
   Enum Tiles
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Empty">
      <summary>
   The empty
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Dirt">
      <summary>
   The dirt
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall">
      <summary>
   The wall
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Destination">
      <summary>
   The destination
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Player">
      <summary>
   The player
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Stone">
      <summary>
   The stone
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Enemy_Up">
      <summary>
   The enemy up
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Enemy_Right">
      <summary>
   The enemy right
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Enemy_Dwn">
      <summary>
   The enemy DWN
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Enemy_Left">
      <summary>
   The enemy left
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.StoneMoving">
      <summary>
   The stone moving
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.PlayerDead">
      <summary>
   The player dead
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Dummy">
      <summary>
   The dummy
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_U">
      <summary>
   The wall u
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_W">
      <summary>
   The wall w
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UW">
      <summary>
   The wall uw
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_D">
      <summary>
   The wall d
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UD">
      <summary>
   The wall ud
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_WD">
      <summary>
   The wall wd
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UWD">
      <summary>
   The wall uwd
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_E">
      <summary>
   The wall e
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UE">
      <summary>
   The wall ue
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_WE">
      <summary>
   The wall we
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UWE">
      <summary>
   The wall uwe
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_DE">
      <summary>
   The wall de
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UDE">
      <summary>
   The wall ude
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_WDE">
      <summary>
   The wall wde
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.Tiles.Wall_UWDE">
      <summary>
   The wall uwde
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.ViewModel.UserAction">
      <summary>
   Enum UserAction
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.ViewModel.GameSound">
      <summary>
   Enum GameSound
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.GoUp">
      <summary>
   The go up
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.GoWest">
      <summary>
   The go west
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.GoDown">
      <summary>
   The go down
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.GoEast">
      <summary>
   The go east
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.Quit">
      <summary>
   The quit
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.Help">
      <summary>
   The help
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.Restart">
      <summary>
   The restart
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.Nop">
      <summary>
   The nop
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.NextLvl">
      <summary>
   The next level
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.UserAction.PrevLvl">
      <summary>
   The previous level
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.GameSound.NoSound">
      <summary>
   The no sound
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.GameSound.DeepBoom">
      <summary>
   The deep boom
   </summary>
    </member>
    <member name="F:Werner_Flaschbier_Base.ViewModel.GameSound.Tick">
      <summary>
   The tick
   </summary>
    </member>
    <member name="T:Werner_Flaschbier_Base.Programm">
      <summary>
   Class Programm.
   </summary>
    </member>
    <member name="M:Werner_Flaschbier_Base.Programm.Main(System.String[])">
      <summary>
   Defines the entry point of the application.
   </summary>
      <param name="args">The arguments.</param>
    </member>
  </members>
</doc>