<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Snake_Base</name>
  </assembly>
  <members>
    <member name="N:Snake_Base.Model">
      <summary>
   The Model namespace.
   </summary>
      <autogeneratedoc />
    </member>
    <member name="T:Snake_Base.Model.Apple">
      <summary>
   Class Apple.
   Implements the <see cref="T:Snake_Base.Model.SnakeGameObject" /></summary>
      <seealso cref="T:Snake_Base.Model.SnakeGameObject" />
    </member>
    <member name="M:Snake_Base.Model.Apple.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Apple" /> class.
   </summary>
    </member>
    <member name="M:Snake_Base.Model.Apple.#ctor(Point,System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Apple" /> class.
   </summary>
      <param name="point">The point.</param>
      <param name="plf">The PLF.</param>
    </member>
    <member name="T:Snake_Base.Model.Direction">
      <summary>
   Enum Direction
   </summary>
    </member>
    <member name="T:Snake_Base.Model.Offsets">
      <summary>
   Class Offsets.
   </summary>
    </member>
    <member name="F:Snake_Base.Model.Direction.North">
      <summary>
   The north
   </summary>
    </member>
    <member name="F:Snake_Base.Model.Direction.West">
      <summary>
   The west
   </summary>
    </member>
    <member name="F:Snake_Base.Model.Direction.South">
      <summary>
   The south
   </summary>
    </member>
    <member name="F:Snake_Base.Model.Direction.East">
      <summary>
   The east
   </summary>
    </member>
    <member name="M:Snake_Base.Model.Offsets.DirOffset(Direction)">
      <summary>
   Dirs the offset.
   </summary>
      <param name="d">The d.</param>
      <returns>Point.</returns>
    </member>
    <member name="M:Snake_Base.Model.Offsets.DirOffset(System.Nullable{Direction},Point)">
      <summary>
   Dirs the offset.
   </summary>
      <param name="dir">The dir.</param>
      <param name="position">The position.</param>
      <returns>Point.</returns>
    </member>
    <member name="T:Snake_Base.Model.Field`1">
      <summary>
   Class Field.
   Implements the <see cref="T:Snake_Base.Model.IPlacedObject" />
   Implements the <see cref="T:BaseLib.Interfaces.IParentedObject" />
   Implements the <see cref="T:BaseLib.Interfaces.IHasChildren`1" /></summary>
      <typeparam name="T">
      </typeparam>
      <seealso cref="T:Snake_Base.Model.IPlacedObject" />
      <seealso cref="T:BaseLib.Interfaces.IParentedObject" />
      <seealso cref="T:BaseLib.Interfaces.IHasChildren`1" />
    </member>
    <member name="P:Snake_Base.Model.Field`1.Place">
      <summary>
   Gets or sets the place.
   </summary>
      <value>The place.</value>
    </member>
    <member name="P:Snake_Base.Model.Field`1.Parent">
      <summary>
   Gets or sets the parent.
   </summary>
      <value>The parent.</value>
    </member>
    <member name="P:Snake_Base.Model.Field`1.Items">
      <summary>
   Gets or sets the items.
   </summary>
      <value>The items.</value>
    </member>
    <member name="E:Snake_Base.Model.Field`1.DataChangeEvent">
      <summary>
   Occurs when [data change event].
   </summary>
    </member>
    <member name="E:Snake_Base.Model.Field`1.OnPlaceChange">
      <summary>
   Occurs when [on place change].
   </summary>
    </member>
    <member name="M:Snake_Base.Model.Field`1.GetPlace">
      <summary>
   Gets the place.
   </summary>
      <returns>Point.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.SetPlace(Point,System.String)">
      <summary>
   Sets the place.
   </summary>
      <param name="value">The value.</param>
      <param name="Name">The name.</param>
    </member>
    <member name="M:Snake_Base.Model.Field`1.GetOldPlace">
      <summary>
   Gets the old place.
   </summary>
      <returns>Point.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.AddItem(`0)">
      <summary>
   Adds the item.
   </summary>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.RemoveItem(`0)">
      <summary>
   Removes the item.
   </summary>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.GetItems">
      <summary>
   Gets the items.
   </summary>
      <returns>IEnumerable&lt;T&gt;.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.SetParent(System.Nullable{System.Object},System.String)">
      <summary>
   Sets the parent.
   </summary>
      <param name="value">The value.</param>
      <param name="CallerMember">The caller member.</param>
    </member>
    <member name="M:Snake_Base.Model.Field`1.GetParent">
      <summary>
   Gets the parent.
   </summary>
      <returns>System.Nullable&lt;System.Object&gt;.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Field`1" /> class.
   </summary>
    </member>
    <member name="M:Snake_Base.Model.Field`1.#ctor(Point,System.Nullable{System.Object})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Field`1" /> class.
   </summary>
      <param name="place">The place.</param>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:Snake_Base.Model.Field`1.ToString">
      <summary>
   Returns a <see cref="T:System.String" /> that represents this instance.
   </summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:Snake_Base.Model.Field`1.NotifyChildChange(`0,System.Object,System.Object,System.String)">
      <summary>
   Notifies the child change.
   </summary>
      <param name="childObject">The child object.</param>
      <param name="oldVal">The old value.</param>
      <param name="newVal">The new value.</param>
      <param name="prop">The property.</param>
    </member>
    <member name="T:Snake_Base.Model.IPlacedObject">
      <summary>
   Interface IPlacedObject
   </summary>
    </member>
    <member name="E:Snake_Base.Model.IPlacedObject.OnPlaceChange">
      <summary>
   Occurs when [on place change].
   </summary>
    </member>
    <member name="P:Snake_Base.Model.IPlacedObject.Place">
      <summary>
   Gets or sets the place.
   </summary>
      <value>The place.</value>
    </member>
    <member name="M:Snake_Base.Model.IPlacedObject.SetPlace(Point,System.String)">
      <summary>
   Sets the place.
   </summary>
      <param name="value">The value.</param>
      <param name="Name">The name.</param>
    </member>
    <member name="M:Snake_Base.Model.IPlacedObject.GetPlace">
      <summary>
   Gets the place.
   </summary>
      <returns>Point.</returns>
    </member>
    <member name="M:Snake_Base.Model.IPlacedObject.GetOldPlace">
      <summary>
   Gets the old place.
   </summary>
      <returns>Point.</returns>
    </member>
    <member name="T:Snake_Base.Model.Playfield2D`1">
      <summary>
   Class Playfield2D.
   Implements the <see cref="T:BaseLib.Interfaces.IHasChildren`1" /></summary>
      <typeparam name="T">
      </typeparam>
      <seealso cref="T:BaseLib.Interfaces.IHasChildren`1" />
    </member>
    <member name="T:Snake_Base.Model.Playfield2D">
      <summary>
   Class Playfield2D.
   Implements the <see cref="T:BaseLib.Interfaces.IHasChildren`1" /></summary>
      <seealso cref="T:BaseLib.Interfaces.IHasChildren`1" />
    </member>
    <member name="P:Snake_Base.Model.Playfield2D`1.PfSize">
      <summary>
   Gets or sets the size of the pf.
   </summary>
      <value>The size of the pf.</value>
    </member>
    <member name="P:Snake_Base.Model.Playfield2D`1.Rect">
      <summary>
   Gets the rect.
   </summary>
      <value>The rect.</value>
    </member>
    <member name="P:Snake_Base.Model.Playfield2D`1.Items">
      <summary>
   Gets the items.
   </summary>
      <value>The items.</value>
    </member>
    <member name="E:Snake_Base.Model.Playfield2D`1.OnDataChanged">
      <summary>
   Occurs when [on data changed].
   </summary>
    </member>
    <member name="P:Snake_Base.Model.Playfield2D`1.DefaultSize">
      <summary>
   Gets or sets the default size.
   </summary>
      <value>The default size.</value>
    </member>
    <member name="P:Snake_Base.Model.Playfield2D`1.Item(Point)">
      <summary>
   Gets or sets the <see cref="T:System.Nullable`1" /> with the specified p.
   </summary>
      <param name="P">The p.</param>
      <returns>System.Nullable&lt;T&gt;.</returns>
    </member>
    <member name="M:Snake_Base.Model.Playfield2D`1.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Playfield2D`1" /> class.
   </summary>
    </member>
    <member name="M:Snake_Base.Model.Playfield2D`1.#ctor(Size)">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Playfield2D`1" /> class.
   </summary>
      <param name="size">The size.</param>
    </member>
    <member name="M:Snake_Base.Model.Playfield2D`1.AddItem(`0)">
      <summary>
   Adds the item.
   </summary>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Snake_Base.Model.Playfield2D`1.RemoveItem(`0)">
      <summary>
   Removes the item.
   </summary>
      <param name="value">The value.</param>
      <returns>
        <c>true</c> if XXXX, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Snake_Base.Model.Playfield2D`1.GetItems">
      <summary>
   Gets the items.
   </summary>
      <returns>IEnumerable&lt;T&gt;.</returns>
    </member>
    <member name="M:Snake_Base.Model.Playfield2D`1.NotifyChildChange(`0,System.Object,System.Object,System.String)">
      <summary>
   Notifies the child change.
   </summary>
      <param name="childObject">The child object.</param>
      <param name="oldVal">The old value.</param>
      <param name="newVal">The new value.</param>
      <param name="prop">The property.</param>
    </member>
    <member name="T:Snake_Base.Model.SnakeBodyPart">
      <summary>
   Class SnakeBodyPart.
   Implements the <see cref="T:Snake_Base.Model.SnakeGameObject" />
   Implements the <see cref="T:BaseLib.Interfaces.IParentedObject`1" /></summary>
      <seealso cref="T:Snake_Base.Model.SnakeGameObject" />
      <seealso cref="T:BaseLib.Interfaces.IParentedObject`1" />
    </member>
    <member name="T:Snake_Base.Model.SnakeHead">
      <summary>
   Class SnakeHead.
   Implements the <see cref="T:Snake_Base.Model.SnakeBodyPart" /></summary>
      <seealso cref="T:Snake_Base.Model.SnakeBodyPart" />
    </member>
    <member name="T:Snake_Base.Model.SnakeTail">
      <summary>
   Class SnakeTail.
   Implements the <see cref="T:Snake_Base.Model.SnakeBodyPart" /></summary>
      <seealso cref="T:Snake_Base.Model.SnakeBodyPart" />
    </member>
    <member name="T:Snake_Base.Model.Snake">
      <summary>
   Class Snake.
   </summary>
    </member>
    <member name="P:Snake_Base.Model.SnakeBodyPart.Snake">
      <summary>
   Gets or sets the snake.
   </summary>
      <value>The snake.</value>
    </member>
    <member name="M:Snake_Base.Model.SnakeBodyPart.SetParent(System.Nullable{Snake},System.String)">
      <summary>
   Sets the parent.
   </summary>
      <param name="value">The value.</param>
      <param name="CallerMember">The caller member.</param>
    </member>
    <member name="P:Snake_Base.Model.SnakeBodyPart.NextPart">
      <summary>
   Gets or sets the next part.
   </summary>
      <value>The next part.</value>
    </member>
    <member name="M:Snake_Base.Model.SnakeBodyPart.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeBodyPart" /> class.
   </summary>
    </member>
    <member name="M:Snake_Base.Model.SnakeBodyPart.#ctor(System.Nullable{Snake})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeBodyPart" /> class.
   </summary>
      <param name="snake">The snake.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeBodyPart.#ctor(Point,System.Nullable{Snake},System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeBodyPart" /> class.
   </summary>
      <param name="place">The place.</param>
      <param name="snake">The snake.</param>
      <param name="playfield">The playfield.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeHead.#ctor(System.Nullable{Snake})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeHead" /> class.
   </summary>
      <param name="snake">The snake.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeHead.#ctor(Point,System.Nullable{Snake},System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeHead" /> class.
   </summary>
      <param name="place">The place.</param>
      <param name="snake">The snake.</param>
      <param name="playfield">The playfield.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeTail.#ctor(System.Nullable{Snake})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeTail" /> class.
   </summary>
      <param name="snake">The snake.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeTail.#ctor(Point,System.Nullable{Snake},System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeTail" /> class.
   </summary>
      <param name="place">The place.</param>
      <param name="snake">The snake.</param>
      <param name="playfield">The playfield.</param>
    </member>
    <member name="F:Snake_Base.Model.Snake.alive">
      <summary>
   The alive
   </summary>
    </member>
    <member name="P:Snake_Base.Model.Snake.Length">
      <summary>
   Gets the length.
   </summary>
      <value>The length.</value>
    </member>
    <member name="P:Snake_Base.Model.Snake.HeadPos">
      <summary>
   Gets the head position.
   </summary>
      <value>The head position.</value>
    </member>
    <member name="M:Snake_Base.Model.Snake.#ctor(Point,System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.Snake" /> class.
   </summary>
      <param name="start">The start.</param>
      <param name="playfield">The playfield.</param>
    </member>
    <member name="M:Snake_Base.Model.Snake.SnakeMove(Direction)">
      <summary>
   Snakes the move.
   </summary>
      <param name="dir">The dir.</param>
    </member>
    <member name="T:Snake_Base.Model.SnakeGameObject">
      <summary>
   Class SnakeGameObject.
   Implements the <see cref="T:Snake_Base.Model.IPlacedObject" />
   Implements the <see cref="T:BaseLib.Interfaces.IParentedObject`1" /></summary>
      <seealso cref="T:Snake_Base.Model.IPlacedObject" />
      <seealso cref="T:BaseLib.Interfaces.IParentedObject`1" />
    </member>
    <member name="P:Snake_Base.Model.SnakeGameObject.DefaultParent">
      <summary>
   Gets or sets the default parent.
   </summary>
      <value>The default parent.</value>
    </member>
    <member name="E:Snake_Base.Model.SnakeGameObject.DataChangeEvent">
      <summary>
   Occurs when [data change event].
   </summary>
    </member>
    <member name="E:Snake_Base.Model.SnakeGameObject.OnPlaceChange">
      <summary>
   Occurs when [on place change].
   </summary>
    </member>
    <member name="P:Snake_Base.Model.SnakeGameObject.OldPlace">
      <summary>
   Gets the old place.
   </summary>
      <value>The old place.</value>
    </member>
    <member name="P:Snake_Base.Model.SnakeGameObject.Place">
      <summary>
   Gets or sets the place.
   </summary>
      <value>The place.</value>
    </member>
    <member name="P:Snake_Base.Model.SnakeGameObject.Parent">
      <summary>
   Gets or sets the parent.
   </summary>
      <value>The parent.</value>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeGameObject" /> class.
   </summary>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.#ctor(Point,System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.Model.SnakeGameObject" /> class.
   </summary>
      <param name="place">The place.</param>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.GetOldPlace">
      <summary>
   Gets the old place.
   </summary>
      <returns>Point.</returns>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.GetPlace">
      <summary>
   Gets the place.
   </summary>
      <returns>Point.</returns>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.SetPlace(Point,System.String)">
      <summary>
   Sets the place.
   </summary>
      <param name="value">The value.</param>
      <param name="Name">The name.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.GetParent">
      <summary>
   Gets the parent.
   </summary>
      <returns>System.Nullable&lt;Playfield2D&lt;SnakeGameObject&gt;&gt;.</returns>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.SetParent(System.Nullable{Playfield2D{SnakeGameObject}},System.String)">
      <summary>
   Sets the parent.
   </summary>
      <param name="value">The value.</param>
      <param name="CallerMember">The caller member.</param>
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.NtfyParentChange(System.String,System.Nullable{Playfield2D{SnakeGameObject}},System.Nullable{Playfield2D{SnakeGameObject}})">
      <summary>
   Ntfies the parent change.
   </summary>
      <param name="arg1">The arg1.</param>
      <param name="arg2">The arg2.</param>
      <param name="arg3">The arg3.</param>
      <autogeneratedoc />
    </member>
    <member name="M:Snake_Base.Model.SnakeGameObject.NtfyPlaceChange(System.String,Point,Point)">
      <summary>
   Ntfies the place change.
   </summary>
      <param name="arg1">The arg1.</param>
      <param name="arg2">The arg2.</param>
      <param name="arg3">The arg3.</param>
      <autogeneratedoc />
    </member>
    <member name="N:Snake_Base.View">
      <summary>
The View namespace.
</summary>
      <autogeneratedoc />
    </member>
    <member name="T:Snake_Base.View.TileDef">
      <summary>
Class TileDef.
Implements the <see cref="T:ConsoleDisplay.View.TileDef`1" /></summary>
      <seealso cref="T:ConsoleDisplay.View.TileDef`1" />
    </member>
    <member name="M:Snake_Base.View.TileDef.GetTileDef(Snake_Base.ViewModel.Tiles)">
      <summary>
Gets the tile definition.
</summary>
      <param name="tile">The tile.</param>
      <returns>(string[] lines, (System.ConsoleColor fgr, System.ConsoleColor bgr)[] colors).</returns>
      <autogeneratedoc />
    </member>
    <member name="N:Snake_Base.ViewModel">
      <summary>
   The ViewModel namespace.
   </summary>
      <autogeneratedoc />
    </member>
    <member name="T:Snake_Base.ViewModel.Game">
      <summary>
   Class Game.
   </summary>
    </member>
    <member name="P:Snake_Base.ViewModel.Game.Playfield">
      <summary>
   Gets or sets the playfield.
   </summary>
      <value>The playfield.</value>
    </member>
    <member name="P:Snake_Base.ViewModel.Game.Snake">
      <summary>
   Gets or sets the snake.
   </summary>
      <value>The snake.</value>
    </member>
    <member name="F:Snake_Base.ViewModel.Game.GetNextRnd">
      <summary>
   The get next random
   </summary>
    </member>
    <member name="P:Snake_Base.ViewModel.Game.IsRunning">
      <summary>
   Gets a value indicating whether this instance is running.
   </summary>
      <value>
        <c>true</c> if this instance is running; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Snake_Base.ViewModel.Game.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:Snake_Base.ViewModel.Game" /> class.
   </summary>
    </member>
    <member name="M:Snake_Base.ViewModel.Game.GameStep">
      <summary>
   Games the step.
   </summary>
      <returns>System.Int32.</returns>
    </member>
    <member name="T:Snake_Base.ViewModel.Tiles">
      <summary>
   Enum Tiles
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.Empty">
      <summary>
   The empty field
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.Wall">
      <summary>
   The wall
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.Apple">
      <summary>
   The apple
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeHead_N">
      <summary>
   The snake head north
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeTail_N">
      <summary>
   The snake tail north
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeBody_NS">
      <summary>
   The snake body north-south
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeHead_W">
      <summary>
   The snake head west
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeHead_S">
      <summary>
   The snake head south
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeHead_E">
      <summary>
   The snake head east
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeTail_W">
      <summary>
   The snake tail west
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeTail_S">
      <summary>
   The snake tail south
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeTail_E">
      <summary>
   The snake tail east
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeBody_NW">
      <summary>
   The snake body north-west
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeBody_SW">
      <summary>
   The snake body south-west
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeBody_SE">
      <summary>
   The snake body south-east
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeBody_NE">
      <summary>
   The snake body north-east
   </summary>
    </member>
    <member name="F:Snake_Base.ViewModel.Tiles.SnakeBody_WE">
      <summary>
   The snake body west-east
   </summary>
    </member>
    <member name="N:Snake_Base">
      <summary>
   The Snake_Base namespace.
   </summary>
      <autogeneratedoc />
    </member>
    <member name="T:Snake_Base.Program">
      <summary>
   Class Program.
   </summary>
    </member>
  </members>
</doc>