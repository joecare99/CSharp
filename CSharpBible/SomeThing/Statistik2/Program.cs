using System;
using System.Collections.Generic;
using System.Threading;
class P { static void Main() { Console.Title = "Stat-Analyzer v5.3"; var r = new Random(); int g = r.Next(1, 21); bool e = false; string A = D(4647756131583842797UL, 9, 65, 7, 64), V = E(86, new[] { 11, 17, -9, -8, 13, 12, -76, 0, 0 }), F = E(70, new[] { 41, 6, -3, -9, -4, 13, -68, 0, 0 }), M = E(77, new[] { 34, -1, 6, -15, -55, 0, 0 }), K = E(75, new[] { 36, 7, -21, 17, -9, -8, 13, 12, -76, 0, 0 }); var Phr = new List<string> { A, V, F, M, K }; Console.WriteLine("=== Stat-Analyzer v5.3 ==="); Console.WriteLine("Bitte geben Sie Zahlen ein, um die 'Analyse' zu starten (1–20)."); while (!e) { Console.Write("\nEingabe: "); string s = Console.ReadLine(); Console.WriteLine(Phr[r.Next(Phr.Count)]); for (int i = 0; i <= 20; i++) { Console.Write("[" + new string('#', i) + new string(' ', 20 - i) + $"] {(i * 100 / 20),3}%\r"); Thread.Sleep(28); } Console.WriteLine(); Console.WriteLine($"Durchschnittswert: {r.Next(10, 100)}"); Console.WriteLine($"Varianz: {r.NextDouble():F3}"); Console.WriteLine($"Korrelation: {r.NextDouble():F2}"); int n = r.Next(6, 10); for (int i = 0; i < n; i++) Console.WriteLine(new string('|', r.Next(5, 20))); if (int.TryParse(s, out int z)) { if (z == g) { Console.WriteLine("Analyse abgeschlossen: Optimale Lösung gefunden!"); e = true; } else if (z < g) Console.WriteLine("Analyse abgeschlossen: Wert liegt UNTER dem Erwartungsbereich."); else Console.WriteLine("Analyse abgeschlossen: Wert liegt ÜBER dem Erwartungsbereich."); } else Console.WriteLine("Analyse fehlgeschlagen: Eingabe konnte nicht verarbeitet werden."); } Console.WriteLine("\nVerifikation: Prozesse erfolgreich abgeschlossen."); } static string E(int s, int[] d) { var L = new List<char> { (char)s }; foreach (var x in d) { s += x; L.Add((char)s); } return new string(L.ToArray()); } static string D(ulong k, int n, int s, int w, int b) { var L = new List<char> { (char)s }; for (int i = 0; i < n; i++) { int m = (1 << w) - 1; int c = (int)((k >> (i * w)) & (ulong)m); s += c - b; L.Add((char)s); } return new string(L.ToArray()); } }
