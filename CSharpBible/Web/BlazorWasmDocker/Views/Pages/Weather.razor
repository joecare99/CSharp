@page "/weather"
@using BlazorWasmDocker.Models
@using BlazorWasmDocker.ViewModels.Interfaces
@using System.ComponentModel

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
      private WeatherForecast[]? forecasts;

    [Inject]
    public IWeatherViewModel DataSet { get; set; }

    public Weather()
	{
        DataSet = IoC.GetRequiredService<IWeatherViewModel>();
	}

    public void OnVMPropertyChanged(object sender, PropertyChangedEventArgs e)
	{
		if (e.PropertyName == "Forecasts")
		{
			forecasts = DataSet.Forecasts?.ToArray();
            StateHasChanged();
		}
	}

    protected override async Task OnInitializedAsync()
    {          
		DataSet.PropertyChanged += OnVMPropertyChanged;
        DataSet.LoadData();
    }
}
