// ***********************************************************************
// Assembly         : WPF_StickyNotesDemo
// Author           : Mir
// Created          : 05-19-2023
//
// Last Modified By : Mir
// Last Modified On : 05-19-2023
// ***********************************************************************
// <copyright file="StickyNotesModel.cs" company="JC-Soft">
//     Copyright © JC-Soft 2023
// </copyright>
// <summary></summary>
// ***********************************************************************
using CommunityToolkit.Mvvm.ComponentModel;
using System;
using System.Timers;

/// <summary>
/// The Models namespace.
/// </summary>
/// <autogeneratedoc />
namespace WPF_StickyNotesDemo.Models
{
    /// <summary>
    /// Class StickyNotesModel.
    /// Implements the <see cref="ObservableObject" />
    /// Implements the <see cref="WPF_StickyNotesDemo.Models.IStickyNotesModel" />
    /// </summary>
    /// <seealso cref="ObservableObject" />
    /// <seealso cref="WPF_StickyNotesDemo.Models.IStickyNotesModel" />
    /// <autogeneratedoc />
    public partial class StickyNotesModel :ObservableObject, IStickyNotesModel
    {
        #region Properties
        /// <summary>
        /// The timer
        /// </summary>
        /// <autogeneratedoc />
        private readonly Timer _timer;
        /// <summary>
        /// Gets or sets the get now.
        /// </summary>
        /// <value>The get now.</value>
        /// <autogeneratedoc />
        public static Func<DateTime> GetNow { get; set; } = () => DateTime.Now;
        /// <summary>
        /// Gets the now.
        /// </summary>
        /// <value>The now.</value>
        /// <autogeneratedoc />
        public DateTime Now { get => GetNow(); }
        #endregion

        #region Methods
        /// <summary>
        /// Initializes a new instance of the <see cref="StickyNotesModel"/> class.
        /// </summary>
        /// <autogeneratedoc />
        public StickyNotesModel()
        {
            _timer = new(250d);
            _timer.Elapsed += (s, e) => OnPropertyChanged(nameof(Now));
            _timer.Start();
        }

#if !NET5_0_OR_GREATER
        /// <summary>
        /// Finalizes an instance of the <see cref="MainWindowViewModel" /> class.
        /// </summary>
        ~StickyNotesModel()
        {
            _timer.Stop();
            return;
        }
#endif
        #endregion
    }
}
