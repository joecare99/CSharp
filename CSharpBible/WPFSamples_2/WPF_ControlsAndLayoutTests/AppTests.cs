using Microsoft.VisualStudio.TestTools.UnitTesting;
using BaseLib.Helper;
using WPF_ControlsAndLayout.Models;
using System;
using WPF_ControlsAndLayout.Models.Interfaces;
using System.Windows;

namespace WPF_ControlsAndLayout.Tests
{
    internal class TestApp : App
    {
        private const string sCurrent = "_appInstance";
        private const string sAppCreated = "_appCreatedInThisAppDomain";

        public void DoStartUp()
        {
            OnStartup(null);
        }

        public new void Shutdown()
        {
            // fully cleanup the application
            typeof(Application).GetField(sCurrent, System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.NonPublic)?.SetValue(null, null);
            typeof(Application).GetField(sAppCreated, System.Reflection.BindingFlags.Static | System.Reflection.BindingFlags.NonPublic)?.SetValue(null, false);
            base.Shutdown();
        }
    }

    [TestClass()]
    public class AppTests 
    {
        private TestApp? app;
#pragma warning disable CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.
        private Func<Type, object?> _gsold;
        private Func<Type, object> _grsold;
#pragma warning restore CS8618 // Ein Non-Nullable-Feld muss beim Beenden des Konstruktors einen Wert ungleich NULL enthalten. Erwägen Sie die Deklaration als Nullable.

        /// <summary>
        /// Initializes this instance.
        /// </summary>
        /// <autogeneratedoc />
        [TestInitialize]
        public void Init()
        {
            _gsold = IoC.GetSrv;
            _grsold = IoC.GetReqSrv;
            app = new TestApp();
            IoC.GetReqSrv = (t) =>t switch {
                _ when t == typeof(IControlsAndLayoutModel) => new ControlsAndLayoutModel(),
                _ => throw new ArgumentException() };          
        }

        [TestCleanup]
        public void CleanUp()
        {
            IoC.GetSrv = _gsold;
            IoC.GetReqSrv = _grsold;
            app?.Shutdown();
            app = null;
        }

        [TestMethod]
        public void AppTest()
        {
            Assert.IsNotNull(app);
        }

        [TestMethod]
        public void AppTest2()
        {
            app!.DoStartUp();
            Assert.IsNotNull(IoC.GetReqSrv(typeof(IControlsAndLayoutModel)));
            Assert.IsNull(IoC.GetSrv(typeof(App)));
        }
    }
}
