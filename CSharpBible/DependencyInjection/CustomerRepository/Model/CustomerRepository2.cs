using CustomerRepository.Model;
using CustomerRepository.Model.Factory;

namespace CustomerRepositoryTests.Model
{
    /// <summary>Class CusomerRepository2.
    /// Implements the <see cref="ICustomerRepository" /></summary>
    /// <remarks>This repository uses a <b>Factory</b></remarks>
    /// <autogeneratedoc />
    public class CustomerRepository2 : ICustomerRepository2
    {
        private Dictionary<Guid, CCustomer> _customers = new Dictionary<Guid, CCustomer>();

        public long Count => throw new NotImplementedException();

        public IClock Clock { get; }

        public ILog Log { get; }

        public CustomerRepository2()
        {
            var clockFactory = new CClockFactory();
            Clock = clockFactory.Get();

            var logFactory = new CLogFactory();
            Log = logFactory.Get();
        }

        public CCustomer Get(Guid id)
        {
            CCustomer result;
            if(!_customers.TryGetValue(id, out result!))
            {
                Log.Error(Clock.Now, "no such customer");
                throw new ArgumentException("no such customer");
            }
            return result;
        }

        public Guid Put(CCustomer customer)
        {
            throw new NotImplementedException();
        }


    }
}