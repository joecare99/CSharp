using CustomerRepository.Model;
using CustomerRepository.Model.Factory;
using System;
using System.Collections.Generic;

namespace CustomerRepositoryTests.Model
{
    /// <summary>Class CustomerRepository3.
    /// Implements the <see cref="ICustomerRepository" /></summary>
    /// <remarks>This repository uses a <b>abstract Factory</b></remarks>
    /// <autogeneratedoc />
    public class CustomerRepository3 : ICustomerRepository2
    {
        #region Properties
        #region private properties
        private readonly Dictionary<Guid,CCustomer> _customers=new();
        #endregion
        public IClock Clock { get; }
        public ILog Log { get; }
        public long Count => _customers.Count;
        #endregion

        public CustomerRepository3(IClockFactory clockFactory,ILogFactory logFactory)
        {
            Clock = clockFactory.Get();
            Log = logFactory.Get();
        }

        public CCustomer? Get(Guid id)
        {
            if (!_customers.TryGetValue(id, out CCustomer? result))
            {
                Log.Error(Clock.Now, "no such customer");
                throw new ArgumentException("no such customer");
            }
            return result;
        }

        public Guid Put(CCustomer customer)
        {
            Guid g = Guid.NewGuid();
            _customers[g] = customer;
            return g;
        }


    }
}