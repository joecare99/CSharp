name: "CodeQL C#"

on:
  push:
    branches: [ "master", "main", "develop" ]
  pull_request:
    branches: [ "master", "main", "develop" ]
  schedule:
    - cron: '0 18 * * 5'  # Runs at 18:00 every Friday

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Install wasi-experimental-workload (WebAssembly)
      run: |
        dotnet workload install wasi-experimental
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-extended,security-and-quality

    - name: Build Avalonia_Apps
      continue-on-error: true  # Ignore errors during this step
      run: |
        dotnet build Avalonia_Apps/Avalonia_Apps.sln
        
    - name: Build Transpiler_pp
      continue-on-error: true  # Ignore errors during this step
      run: |
        dotnet build Transpiler_pp/Transpiler_pp.sln
        
    - name: Build CSharpBible
      continue-on-error: true  # Ignore errors during this step
      run: |
        dotnet build CSharpBible/CSharpBible.sln
        
    # Uncomment and modify the following lines if Autobuild fails
    # - run: |
    #    echo "Run, Build Application using script"
    #    ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
